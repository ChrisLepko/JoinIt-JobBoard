var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.136,1,0.677]],["body/components/AppComponent.html",[0,0.229,1,1.21,2,1.304,3,0.279,4,0.238,5,1.085,6,1.085,7,1.085,8,1.085,9,0.198,10,3.183,11,1.085,12,1.9,13,1.63,14,2.062,15,1.407,16,5.457,17,1.407,18,4.918,19,0.279,20,1.304,21,4.002,22,0.509,23,0.029,24,0.861,25,1.362,26,1.362,27,4.127,28,4.918,29,0.366,30,3.793,31,0.459,32,0.459,33,0.279,34,0.017,35,0.931,36,1.407,37,1.304,38,1.085,39,1.652,40,1.085,41,0.66,42,1.085,43,0.795,44,1.085,45,0.732,46,1.085,47,0.732,48,1.207,49,1.085,50,0.795,51,1.407,52,0.732,53,1.085,54,0.732,55,0.795,56,1.085,57,0.732,58,1.085,59,0.795,60,1.006,61,1.085,62,0.732,63,0.871,64,1.085,65,0.732,66,1.085,67,0.732,68,1.085,69,0.732,70,0.931,71,1.006,72,1.085,73,1.085,74,0.017,75,0.022,76,0.017]],["title/modules/AppModule.html",[77,2.115,78,2.115]],["body/modules/AppModule.html",[1,1.28,3,0.188,4,0.161,9,0.196,13,0.629,23,0.03,31,0.801,32,0.31,33,0.188,34,0.011,35,0.629,43,1.137,45,1.047,47,1.047,48,0.921,50,1.137,52,1.047,54,1.047,55,1.137,57,1.047,59,1.137,60,0.68,62,1.047,63,0.665,65,1.047,67,1.047,69,1.047,70,0.629,74,0.011,75,0.017,76,0.011,77,1.677,78,4.371,79,1.515,80,1.677,81,3.724,82,3.254,83,3.724,84,2.751,85,2.151,86,2.151,87,2.151,88,2.151,89,2.151,90,3.209,91,3.209,92,3.149,93,2.151,94,1.88,95,2.564,96,3.149,97,3.752,98,3.149,99,1.677,100,3.149,101,3.752,102,2.751,103,2.151,104,2.564,105,2.564,106,3.752,107,1.893,108,2.151,109,2.564,110,2.564,111,2.564,112,2.564,113,1.88,114,2.564,115,1.88,116,3.149,117,1.677,118,2.151,119,1.677,120,2.151,121,2.151,122,1.677,123,2.151,124,2.151,125,2.151,126,1.677,127,2.151,128,3.752,129,3.752,130,1.265,131,3.752,132,0.994,133,2.564,134,1.075,135,3.752,136,3.752,137,1.164,138,3.752,139,2.564,140,2.564,141,1.88,142,1.381,143,2.564,144,2.564,145,1.677,146,1.88,147,1.88,148,1.677,149,1.677,150,2.151,151,3.752,152,2.151,153,2.151,154,3.752,155,2.564,156,3.752,157,2.564,158,2.564,159,2.564,160,2.564,161,2.564,162,2.564,163,2.564,164,2.564,165,1.164]],["title/classes/AppPage.html",[34,0.014,166,2.371]],["body/classes/AppPage.html",[3,0.34,4,0.289,9,0.241,14,1.936,19,0.34,23,0.03,29,0.536,31,0.559,33,0.34,34,0.02,37,1.225,74,0.02,75,0.024,76,0.02,99,3.022,166,4.08,167,2.28,168,3.876,169,0.986,170,6.196,171,6.196,172,4.619,173,0.986,174,5.405,175,4.619,176,3.876,177,1.263,178,4.619,179,4.619,180,4.619,181,4.619]],["title/modules/AppRoutingModule.html",[77,2.115,90,1.911]],["body/modules/AppRoutingModule.html",[0,0.271,3,0.255,4,0.217,9,0.181,23,0.03,31,0.78,32,0.42,33,0.255,34,0.015,45,0.894,47,1.121,48,0.851,52,0.894,54,0.894,57,0.894,62,0.894,63,0.925,65,0.894,67,0.894,69,0.894,70,1.138,71,0.919,74,0.015,75,0.02,76,0.015,79,2.049,84,2.542,90,2.74,96,2.909,100,3.889,116,2.909,117,2.268,118,2.909,119,2.268,120,2.909,121,2.909,122,2.268,123,2.909,124,2.909,125,2.909,126,2.268,127,2.909,148,2.268,149,2.268,150,2.909,182,3.466,183,3.466,184,3.416,185,4.634,186,1.245,187,3.801,188,3.466,189,3.466,190,1.867,191,6.518,192,3.466,193,3.399,194,3.466,195,3.466,196,3.466,197,2.049,198,4.678,199,2.909,200,2.049,201,3.466,202,2.542,203,4.634,204,4.634,205,3.466,206,2.909,207,3.466]],["title/classes/AuthenticationBean.html",[34,0.014,208,2.115]],["body/classes/AuthenticationBean.html",[3,0.274,4,0.234,9,0.194,14,1.562,19,0.274,20,1.289,22,0.653,23,0.03,24,1.302,29,0.469,31,0.72,32,0.451,33,0.357,34,0.021,41,0.5,74,0.016,75,0.021,76,0.016,130,1.84,142,2.007,167,1.84,177,1.302,208,3.181,209,3.199,210,2.733,211,3.566,212,4.814,213,0.66,214,3.727,215,3.727,216,0.915,217,0.915,218,3.727,219,1.391,220,2.874,221,4.081,222,1.84,223,1.562,224,2.439,225,1.562,226,3.128,227,1.693,228,1.338,229,2.203,230,1.84,231,1.562,232,0.988,233,2.203,234,3.128,235,3.089,236,3.969,237,3.128,238,3.128,239,1.84,240,2.733,241,3.128,242,0.988,243,3.128,244,2.733,245,3.128,246,2.439,247,3.128,248,3.128,249,2.874,250,3.128,251,3.128,252,3.128,253,2.733,254,3.181,255,3.128,256,2.733,257,3.128,258,3.128,259,3.128]],["title/injectables/BasicAuthenticationService.html",[219,0.925,231,1.355]],["body/injectables/BasicAuthenticationService.html",[3,0.255,4,0.217,9,0.181,14,1.453,19,0.255,22,0.465,23,0.03,24,0.787,29,0.576,31,0.704,32,0.42,33,0.341,34,0.02,41,0.622,74,0.015,75,0.02,76,0.015,130,1.711,142,1.867,169,0.821,173,1.029,177,1.265,202,3.399,208,2.268,209,3.609,210,2.542,212,2.909,213,0.614,216,1.138,217,1.138,219,1.326,220,3.295,221,3.889,222,1.711,223,1.453,224,2.268,225,1.453,226,2.909,227,1.574,228,1.245,229,2.049,230,1.711,231,1.943,232,0.919,233,2.74,234,3.889,235,3.22,236,3.829,237,2.909,238,2.909,239,1.711,240,2.542,241,2.909,242,1.229,243,2.909,244,2.542,245,2.909,246,2.268,247,2.909,248,4.678,249,2.74,250,4.678,251,2.909,252,2.909,253,4.088,254,3.032,255,2.909,256,4.088,257,2.909,258,2.909,259,2.909,260,1.711,261,2.268,262,3.466,263,3.466,264,3.466,265,3.466,266,2.542,267,3.466,268,3.466,269,0.992]],["title/classes/Category.html",[34,0.014,270,1.595]],["body/classes/Category.html",[3,0.357,4,0.305,9,0.254,19,0.357,20,1.521,22,0.77,23,0.029,24,1.302,29,0.553,33,0.357,34,0.021,74,0.021,75,0.025,76,0.021,167,2.4,270,2.831,271,4.082,272,6.102,273,3.286,274,4.863,275,2.405,276,4.863]],["title/classes/Company.html",[34,0.014,228,1.161]],["body/classes/Company.html",[3,0.316,4,0.269,9,0.224,19,0.316,20,1.412,22,0.87,23,0.029,24,1.508,29,0.625,33,0.316,34,0.019,41,0.776,74,0.019,75,0.023,76,0.019,167,2.122,228,1.912,235,3.116,242,1.534,275,2.232,277,3.609,278,4.242,279,5.785,280,4.242,281,3.785,282,4.242,283,4.3,284,4.3,285,4.3,286,4.3,287,4.3,288,4.3,289,4.3,290,4.3]],["title/components/FooterComponent.html",[0,0.136,43,0.677]],["body/components/FooterComponent.html",[0,0.223,1,0.753,2,1.259,3,0.264,4,0.225,5,1.029,6,1.029,7,1.029,8,1.029,9,0.188,11,1.029,12,1.889,13,1.621,15,1.359,17,1.359,19,0.264,23,0.03,29,0.458,31,0.435,32,0.435,33,0.264,34,0.016,35,0.883,36,1.359,37,1.259,38,1.029,39,1.618,40,1.029,41,0.637,42,1.029,43,1.185,44,1.029,45,0.694,46,1.029,47,0.694,48,1.166,49,1.029,50,0.753,51,1.359,52,0.694,53,1.029,54,0.694,55,0.753,56,1.029,57,0.694,58,1.029,59,0.753,60,0.953,61,1.029,62,0.694,63,0.841,64,1.029,65,0.694,66,1.029,67,0.694,68,1.029,69,0.694,70,0.883,71,0.953,72,1.029,73,1.029,74,0.016,75,0.021,76,0.016,169,0.841,173,0.637,213,0.942,269,1.359,291,3.017,292,1.465,293,1.641,294,4.748,295,5.317,296,4.748,297,1.746,298,3.595,299,3.595,300,4.748,301,3.595,302,3.985,303,4.748,304,4.748,305,4.748,306,3.595,307,3.985,308,3.017,309,3.985]],["title/components/FormComponent.html",[0,0.136,45,0.624]],["body/components/FormComponent.html",[0,0.162,1,0.425,2,0.834,3,0.149,4,0.127,5,0.58,6,0.58,7,0.58,8,0.58,9,0.106,11,0.58,12,1.735,13,1.489,15,0.899,17,0.899,19,0.149,20,0.834,21,2.305,22,0.738,23,0.03,24,0.984,25,1.783,26,1.783,29,0.574,31,0.68,32,0.246,33,0.149,34,0.009,35,0.498,36,0.899,37,0.834,38,0.58,39,1.241,40,0.58,41,0.695,42,0.58,43,0.425,44,0.58,45,0.837,46,0.58,47,0.391,48,1.379,49,0.58,50,0.425,51,0.899,52,0.391,53,0.58,54,0.391,55,0.425,56,0.58,57,0.391,58,0.58,59,0.425,60,0.538,61,0.58,62,0.391,63,0.832,64,0.58,65,0.391,66,0.58,67,0.391,68,0.58,69,0.391,70,0.498,71,0.538,72,0.58,73,0.58,74,0.009,75,0.014,76,0.009,107,1.219,132,1.682,134,1.818,137,0.921,145,1.327,146,1.487,147,1.487,165,1.749,169,0.557,173,0.768,177,0.46,186,0.728,197,2.935,213,0.359,216,0.945,217,0.945,223,0.85,225,0.85,227,0.921,228,1.129,232,0.538,242,1.021,249,1.199,269,1.343,270,1.9,292,0.97,293,1.188,297,1.339,310,1.702,311,3.85,312,3.144,313,3.231,314,3.231,315,3.231,316,2.519,317,3.231,318,3.642,319,2.276,320,3.231,321,2.638,322,2.638,323,3.64,324,1.858,325,2.276,326,1.327,327,2.674,328,2.353,329,2.008,330,2.171,331,1.97,332,2.141,333,3.144,334,2.028,335,2.638,336,2.028,337,2.638,338,2.638,339,2.028,340,2.638,341,2.028,342,2.028,343,1.487,344,2.028,345,2.028,346,2.132,347,2.028,348,2.074,349,2.028,350,2.028,351,2.028,352,1.199,353,2.028,354,1.092,355,2.028,356,1.092,357,1.092,358,1.092,359,1.82,360,1.428,361,2.638,362,1.702,363,1.702,364,1.327,365,2.028,366,2.028,367,1.702,368,1.092,369,1.327,370,2.96,371,1.327,372,2.074,373,2.823,374,1.487,375,1.487,376,1.702,377,1.487,378,2.305,379,1.487,380,1.487,381,1.487,382,1.487,383,1.487,384,1.702,385,1.702,386,1.702,387,1.702,388,1.702,389,1.702,390,1.702,391,1.702,392,1.702,393,1.97,394,1.327,395,1.327,396,1.327,397,1.327,398,1.327,399,1.702,400,2.028,401,1.199,402,2.028,403,1.327,404,1.327,405,1.693,406,1.702,407,1.199,408,1.327,409,2.028,410,1.199,411,1.199,412,0.921,413,1.702,414,2.028,415,1.702,416,1.001,417,1.199,418,2.638,419,1.552,420,2.057,421,2.057,422,2.057,423,2.057,424,2.057,425,1.858,426,2.638,427,2.638,428,2.638,429,2.638,430,3.64,431,2.638,432,2.638]],["title/injectables/HttpIntercepterBasicAuthService.html",[91,1.911,219,0.925]],["body/injectables/HttpIntercepterBasicAuthService.html",[3,0.3,4,0.256,9,0.213,14,1.711,19,0.3,22,0.692,23,0.03,29,0.497,31,0.684,32,0.494,33,0.3,34,0.018,41,0.692,74,0.018,75,0.023,76,0.018,91,3.047,130,2.015,141,4.143,142,3.196,169,0.913,173,0.723,177,0.926,213,0.723,216,1.265,217,1.265,219,1.475,230,2.015,231,2.62,232,1.082,236,3.78,240,2.993,260,2.015,433,4.741,434,3.426,435,5.154,436,2.993,437,4.082,438,5.154,439,5.934,440,4.741,441,5.934,442,4.082,443,5.154,444,2.413,445,4.082,446,5.154,447,4.082,448,4.082,449,4.082,450,4.082,451,4.082]],["title/components/JobBoardComponent.html",[0,0.136,47,0.624]],["body/components/JobBoardComponent.html",[0,0.225,1,0.764,2,1.272,3,0.268,4,0.229,5,1.044,6,1.044,7,1.044,8,1.044,9,0.19,11,1.044,12,1.892,13,1.623,15,1.372,17,1.372,19,0.268,23,0.029,29,0.462,31,0.442,32,0.442,33,0.268,34,0.016,35,0.896,36,1.372,37,1.272,38,1.044,39,1.628,40,1.044,41,0.644,42,1.044,43,0.764,44,1.044,45,0.704,46,1.044,47,1.098,48,1.558,49,1.044,50,0.764,51,1.372,52,0.704,53,1.044,54,0.704,55,0.764,56,1.044,57,0.704,58,1.044,59,0.764,60,0.968,61,1.044,62,0.704,63,0.85,64,1.044,65,0.704,66,1.044,67,0.704,68,1.044,69,0.704,70,0.896,71,0.968,72,1.044,73,1.044,74,0.016,75,0.021,76,0.016,119,3.505,169,0.85,173,0.647,193,3.517,213,0.949,269,1.372,292,1.48,293,1.653,297,1.756,452,3.928,453,3.063,454,5.356,455,4.796,456,3.649,457,3.649]],["title/components/JobPostingsComponent.html",[0,0.136,50,0.677]],["body/components/JobPostingsComponent.html",[0,0.16,1,0.418,2,0.823,3,0.147,4,0.125,5,0.571,6,0.571,7,0.571,8,0.571,9,0.104,11,0.571,12,1.73,13,1.484,15,0.888,17,0.888,19,0.342,20,0.823,22,0.734,23,0.03,24,1.119,25,1.672,26,1.672,29,0.572,31,0.597,32,0.241,33,0.147,34,0.009,35,0.49,36,0.888,37,0.823,38,0.571,39,1.23,40,0.571,41,0.511,42,0.571,43,0.418,44,0.571,45,0.385,46,0.571,47,0.385,48,1.439,49,0.571,50,0.9,51,0.888,52,0.385,53,0.571,54,0.385,55,0.418,56,0.571,57,0.385,58,0.571,59,0.418,60,0.529,61,0.571,62,0.385,63,0.825,64,0.571,65,0.385,66,0.571,67,0.385,68,0.571,69,0.385,70,0.49,71,0.529,72,0.571,73,0.571,74,0.009,75,0.014,76,0.009,107,0.773,115,4.394,132,1.806,169,0.55,173,0.762,174,2.604,177,0.453,186,0.716,190,2.052,200,3.233,213,0.353,216,0.49,217,0.49,232,0.529,266,2.794,269,1.333,270,1.532,292,0.958,293,1.176,297,1.327,329,1.996,330,2.067,331,1.952,346,1.409,357,1.074,358,1.074,359,1.477,360,0.906,372,1.671,393,0.906,412,1.409,419,1.532,420,1.305,421,1.305,422,1.305,423,1.305,424,1.305,425,1.179,452,4.394,458,1.462,459,3.197,460,2.604,461,3.809,462,3.809,463,3.809,464,3.809,465,3.197,466,3.809,467,3.197,468,3.809,469,3.608,470,4.298,471,2.813,472,1.462,473,2.252,474,2.813,475,3.103,476,1.994,477,1.994,478,1.994,479,1.674,480,1.994,481,1.994,482,1.994,483,1.994,484,1.994,485,1.994,486,1.674,487,1.674,488,1.305,489,1.994,490,1.994,491,1.674,492,1.994,493,1.994,494,1.462,495,1.994,496,2.541,497,1.674,498,1.674,499,1.674,500,1.674,501,1.994,502,1.994,503,1.674,504,1.305,505,1.305,506,1.305,507,3.103,508,1.305,509,1.305,510,1.994,511,3.608,512,1.994,513,1.994,514,1.994,515,1.994,516,1.994,517,1.994,518,1.994,519,1.994,520,4.321,521,3.103,522,1.994,523,1.994,524,4.932,525,4.932,526,1.074,527,1.994,528,1.994,529,1.994,530,1.462,531,1.994,532,1.994,533,1.834,534,1.834,535,3.103,536,2.604,537,2.604,538,2.604,539,3.103,540,4.298,541,3.103,542,3.103,543,2.604,544,2.604,545,3.103,546,2.604,547,2.604]],["title/components/LoginComponent.html",[0,0.136,52,0.624]],["body/components/LoginComponent.html",[0,0.188,1,0.543,2,1.003,3,0.19,4,0.162,5,0.741,6,0.741,7,0.741,8,0.741,9,0.135,11,0.741,12,1.809,13,1.552,15,1.082,17,1.082,19,0.19,20,1.003,22,0.599,23,0.03,24,1.013,25,1.358,26,0.93,29,0.542,31,0.681,32,0.314,33,0.19,34,0.011,35,0.636,36,1.082,37,1.003,38,0.741,39,1.404,40,0.741,41,0.599,42,0.741,43,0.543,44,0.741,45,0.5,46,0.741,47,0.5,48,0.928,49,0.741,50,0.543,51,1.082,52,0.947,53,0.741,54,0.5,55,0.543,56,0.741,57,0.5,58,0.741,59,0.543,60,0.687,61,0.741,62,0.5,63,0.67,64,0.741,65,0.5,66,0.741,67,0.5,68,0.741,69,0.5,70,1.096,71,0.687,72,0.741,73,0.741,74,0.011,75,0.017,76,0.011,107,1.466,132,1.903,134,2.057,137,1.177,165,1.177,169,0.67,173,0.67,177,0.858,186,0.93,193,1.9,197,2.235,202,3.599,209,1.532,213,0.459,216,0.928,217,0.636,227,1.177,231,2.359,232,0.687,235,2.405,239,1.866,242,1.184,254,2.474,269,1.277,292,1.167,293,1.378,297,1.515,319,2.639,324,2.235,325,2.639,326,1.695,327,2.935,328,2.556,331,2.229,332,2.422,346,1.717,348,2.405,352,1.532,354,1.396,356,1.396,359,2.023,360,1.177,368,1.396,370,2.036,393,1.717,394,1.695,395,1.695,396,1.695,397,1.695,398,1.695,401,1.532,403,1.695,404,1.695,405,2.036,407,1.532,410,1.532,411,1.532,412,1.177,416,1.279,417,1.532,419,1.866,440,2.175,444,1.532,473,2.901,474,3.211,533,2.235,534,2.235,548,2.175,549,4.464,550,3.781,551,4.464,552,4.464,553,4.119,554,3.781,555,2.591,556,2.591,557,2.591,558,2.591,559,2.591,560,2.591,561,2.175,562,2.591,563,2.591,564,2.175,565,2.591,566,2.591,567,2.591,568,2.591,569,2.591,570,2.591,571,2.591,572,2.591,573,1.9,574,3.173,575,2.773,576,2.474]],["title/classes/Mail.html",[34,0.014,577,2.115]],["body/classes/Mail.html",[3,0.344,4,0.293,9,0.244,19,0.344,20,1.486,22,0.835,23,0.029,24,1.466,29,0.6,33,0.344,34,0.021,74,0.021,75,0.025,76,0.021,167,2.307,242,1.591,577,3.666,578,3.923,579,4.401,580,4.401,581,5.036,582,4.675,583,4.675,584,4.675,585,4.675]],["title/injectables/MailService.html",[219,0.925,586,2.115]],["body/injectables/MailService.html",[3,0.294,4,0.251,9,0.209,14,1.679,19,0.294,22,0.684,23,0.03,24,1.532,29,0.491,31,0.714,32,0.485,33,0.294,34,0.018,41,0.684,74,0.018,75,0.022,76,0.018,130,1.977,169,0.902,173,0.71,177,0.909,213,0.71,216,1.25,217,1.25,219,1.457,220,3.484,222,1.977,225,1.679,230,1.977,232,1.062,233,3.011,260,1.977,261,2.621,369,3.664,371,3.664,372,3.016,577,2.621,579,4.107,580,4.107,586,3.332,587,3.362,588,4.274,589,4.005,590,5.093,591,5.6,592,5.6,593,4.005,594,4.274,595,4.005,596,4.005,597,4.005]],["title/components/MyPostingsComponent.html",[0,0.136,54,0.624]],["body/components/MyPostingsComponent.html",[0,0.185,1,0.531,2,0.987,3,0.186,4,0.159,5,0.726,6,0.726,7,0.726,8,0.726,9,0.132,11,0.726,12,1.803,13,1.547,15,1.065,17,1.065,19,0.38,20,0.987,22,0.652,23,0.03,25,1.337,26,1.337,29,0.539,31,0.677,32,0.307,33,0.186,34,0.011,35,0.623,36,1.065,37,0.987,38,0.726,39,1.39,40,0.726,41,0.652,42,0.726,43,0.531,44,0.726,45,0.489,46,0.726,47,0.489,48,0.914,49,0.726,50,0.531,51,1.065,52,0.489,53,0.726,54,0.937,55,0.531,56,0.726,57,0.489,58,0.726,59,0.531,60,0.673,61,0.726,62,0.489,63,0.917,64,0.726,65,0.489,66,0.726,67,0.489,68,0.726,69,0.489,70,0.623,71,0.673,72,0.726,73,0.726,74,0.011,75,0.016,76,0.011,107,1.443,132,2.006,134,2.037,148,3.751,169,0.66,173,0.861,177,0.576,190,1.366,200,3.458,213,0.449,216,0.914,217,0.914,223,1.063,225,1.063,232,0.673,242,0.673,249,1.5,269,1.481,273,1.366,275,1.849,292,1.149,293,1.361,297,1.499,329,2.167,330,2.267,331,2.207,332,2.398,357,1.366,358,1.366,359,1.71,360,1.691,393,2.003,412,2.003,416,1.252,419,1.837,458,1.86,459,3.701,460,3.124,465,3.701,469,4.078,471,3.179,472,1.86,479,2.129,486,2.129,487,3.124,488,1.66,496,2.201,497,2.129,498,2.129,499,2.129,500,2.129,503,2.129,504,1.66,505,1.66,506,1.66,508,1.66,509,1.66,526,1.366,533,2.201,534,2.201,536,3.124,537,3.124,538,3.124,598,4.812,599,3.124,600,3.124,601,2.537,602,2.537,603,2.537,604,2.537,605,2.537,606,2.537,607,2.129,608,2.129,609,2.129,610,2.537]],["title/components/NavbarComponent.html",[0,0.136,55,0.677]],["body/components/NavbarComponent.html",[0,0.198,1,0.6,2,1.077,3,0.211,4,0.179,5,0.82,6,0.82,7,0.82,8,0.82,9,0.149,11,0.82,12,1.835,13,1.575,15,1.163,17,1.163,19,0.211,20,1.077,22,0.69,23,0.03,24,1.167,25,1.459,26,1.459,27,3.41,29,0.559,31,0.657,32,0.347,33,0.211,34,0.013,35,0.703,36,1.163,37,1.077,38,0.82,39,1.471,40,0.82,41,0.795,42,0.82,43,0.6,44,0.82,45,0.553,46,0.82,47,0.553,48,1.384,49,0.82,50,0.6,51,1.163,52,0.553,53,0.82,54,0.553,55,1.077,56,0.82,57,0.553,58,0.82,59,0.6,60,0.759,61,0.82,62,0.553,63,0.72,64,0.82,65,0.553,66,0.82,67,0.553,68,0.82,69,0.553,70,0.703,71,0.759,72,0.82,73,0.82,74,0.013,75,0.018,76,0.013,169,0.72,173,0.837,177,0.65,186,1.028,200,2.402,209,1.693,213,0.507,216,0.703,217,0.703,223,1.201,231,2.363,232,0.759,242,1.439,246,1.874,253,3.77,256,4.135,269,1.351,281,3.09,292,1.254,293,1.458,297,1.586,328,2.633,329,2.248,359,1.575,364,1.874,432,4.314,436,2.1,444,1.693,504,1.874,576,2.659,611,2.404,612,4.064,613,4.723,614,4.064,615,4.064,616,2.864,617,2.864,618,2.864,619,2.864,620,2.864,621,2.864,622,2.864,623,2.864,624,2.404,625,2.404,626,2.404,627,2.404,628,2.864,629,2.404,630,2.404,631,5.14]],["title/components/NotFoundComponent.html",[0,0.136,57,0.624]],["body/components/NotFoundComponent.html",[0,0.224,1,0.756,2,1.262,3,0.265,4,0.226,5,1.033,6,1.033,7,1.033,8,1.033,9,0.188,11,1.033,12,1.89,13,1.621,15,1.362,17,1.362,19,0.265,23,0.029,29,0.459,31,0.437,32,0.437,33,0.265,34,0.016,35,0.886,36,1.362,37,1.262,38,1.033,39,1.621,40,1.033,41,0.639,42,1.033,43,0.756,44,1.033,45,0.696,46,1.033,47,0.696,48,1.169,49,1.033,50,0.756,51,1.362,52,0.696,53,1.033,54,0.696,55,0.756,56,1.033,57,1.093,58,1.033,59,0.756,60,0.957,61,1.033,62,0.696,63,0.843,64,1.033,65,0.696,66,1.033,67,0.696,68,1.033,69,0.696,70,0.886,71,0.957,72,1.033,73,1.033,74,0.016,75,0.021,76,0.016,126,3.485,169,0.843,173,0.639,177,1.08,213,0.944,269,1.362,292,1.469,293,1.644,297,1.748,561,3.995,632,4.471,633,3.028,634,5.664,635,5.327,636,4.76,637,3.608,638,3.608,639,4.76,640,3.995,641,4.76]],["title/components/PageHeaderComponent.html",[0,0.136,59,0.677]],["body/components/PageHeaderComponent.html",[0,0.213,1,0.688,2,1.185,3,0.241,4,0.206,5,0.939,6,0.939,7,0.939,8,0.939,9,0.171,11,0.939,12,1.869,13,1.603,15,1.279,17,1.279,19,0.241,23,0.029,29,0.431,31,0.398,32,0.398,33,0.241,34,0.014,35,0.806,36,1.279,37,1.185,38,0.939,39,1.56,40,0.939,41,0.6,42,0.939,43,0.688,44,0.939,45,0.633,46,0.939,47,0.633,48,1.097,49,0.939,50,0.688,51,1.279,52,0.633,53,0.939,54,0.633,55,0.688,56,0.939,57,0.633,58,0.939,59,1.142,60,1.625,61,0.939,62,0.633,63,0.792,64,0.939,65,0.633,66,0.939,67,0.633,68,0.939,69,0.633,70,0.806,71,0.871,72,0.939,73,0.939,74,0.014,75,0.02,76,0.014,113,3.725,169,0.792,173,0.582,213,0.9,269,1.279,292,1.379,293,1.568,297,1.683,302,3.75,377,3.277,378,3.998,379,3.277,380,3.277,381,3.277,382,3.277,383,3.277,420,2.924,421,2.924,422,2.924,423,2.924,424,2.924,425,2.641,543,3.75,544,3.75,575,3.277,642,4.263,643,2.755,644,4.468,645,5.079,646,4.468,647,3.283,648,3.283,649,4.468,650,4.468,651,4.468,652,4.468,653,4.468,654,4.468,655,4.468,656,4.468,657,4.468,658,4.468,659,4.468]],["title/classes/Posting.html",[34,0.014,63,0.573]],["body/classes/Posting.html",[3,0.299,4,0.255,9,0.212,19,0.299,20,1.365,22,0.881,23,0.029,24,1.497,29,0.633,33,0.299,34,0.018,63,0.912,74,0.018,75,0.023,76,0.018,167,2.01,242,1.496,273,3.04,275,2.618,281,3.693,318,4.139,369,3.693,371,3.693,372,3.04,373,4.139,374,4.139,375,4.139,660,3.418,661,5.644,662,4.073,663,4.073,664,4.073,665,4.073,666,4.073,667,4.073,668,4.073,669,4.073,670,4.073,671,4.073,672,4.073]],["title/components/PostingDetailsComponent.html",[0,0.136,62,0.624]],["body/components/PostingDetailsComponent.html",[0,0.162,1,0.424,2,0.833,3,0.149,4,0.127,5,0.58,6,0.58,7,0.58,8,0.58,9,0.201,11,0.58,12,1.735,13,1.488,15,0.899,17,0.899,19,0.149,20,0.833,22,0.582,23,0.03,25,1.381,26,1.381,29,0.56,31,0.665,32,0.245,33,0.149,34,0.009,35,0.497,36,0.899,37,0.833,38,0.58,39,1.24,40,0.58,41,0.666,42,0.58,43,0.424,44,0.58,45,0.391,46,0.58,47,0.391,48,0.771,49,0.58,50,0.424,51,0.899,52,0.391,53,0.58,54,0.391,55,0.424,56,0.58,57,0.391,58,0.58,59,0.424,60,0.537,61,0.58,62,0.836,63,1.083,64,0.58,65,0.391,66,0.58,67,0.391,68,0.58,69,0.391,70,0.497,71,0.537,72,0.58,73,0.58,74,0.009,75,0.014,76,0.009,107,1.218,117,3.849,132,1.819,134,1.817,137,0.92,165,1.427,169,0.557,173,0.831,177,0.713,186,0.727,190,2.072,206,2.636,211,2.822,213,0.359,216,0.771,217,0.771,227,0.92,232,0.537,239,1.899,242,1.02,269,1.42,273,1.692,275,1.317,292,0.969,293,1.187,297,1.338,316,2.517,319,2.274,324,1.857,325,2.274,327,2.789,328,2.352,330,2.081,331,1.969,332,2.139,346,1.969,348,2.072,352,1.197,354,1.091,356,2.072,358,1.091,359,1.924,360,1.747,368,1.091,370,2.335,393,2.131,401,1.197,405,1.091,407,1.197,408,1.325,410,1.197,411,1.197,412,2.131,415,1.7,416,1,417,1.197,419,1.55,471,2.836,472,1.485,473,2.274,474,2.836,488,1.325,494,1.485,505,2.055,506,1.325,508,1.325,509,1.325,526,1.091,533,1.857,534,1.857,547,2.636,579,1.485,580,1.485,581,1.7,586,3.388,588,3.638,594,2.636,673,4.314,674,1.7,675,2.636,676,3.847,677,3.141,678,3.847,679,3.847,680,3.638,681,2.636,682,3.141,683,2.025,684,2.025,685,2.636,686,2.025,687,1.7,688,2.025,689,2.025,690,2.025,691,2.025,692,2.025,693,2.025,694,2.025,695,2.025,696,1.7,697,2.025,698,2.636,699,1.7,700,2.025,701,1.7,702,2.025,703,1.7,704,2.025,705,2.025,706,2.025,707,3.141,708,1.7,709,3.229,710,2.025,711,2.025,712,2.025,713,2.025,714,2.025,715,2.025,716,2.025,717,2.025,718,2.025,719,2.025,720,2.025,721,2.025,722,2.025,723,3.141,724,3.141,725,3.141,726,3.141,727,3.141,728,3.141,729,2.304,730,3.141,731,3.141,732,3.638,733,3.141,734,3.141,735,3.141,736,3.141]],["title/components/PostingEditComponent.html",[0,0.136,65,0.624]],["body/components/PostingEditComponent.html",[0,0.134,1,0.32,2,0.666,3,0.112,4,0.096,5,0.438,6,0.438,7,0.438,8,0.438,9,0.08,11,0.438,12,1.636,13,1.403,15,0.718,17,0.718,19,0.112,20,0.666,21,1.841,22,0.775,23,0.03,24,1.264,25,2,26,2,29,0.587,31,0.606,32,0.185,33,0.112,34,0.007,35,0.375,36,0.718,37,0.666,38,0.438,39,1.057,40,0.438,41,0.621,42,0.438,43,0.32,44,0.438,45,0.295,46,0.438,47,0.295,48,1.187,49,0.438,50,0.32,51,0.718,52,0.295,53,0.438,54,0.295,55,0.32,56,0.438,57,0.295,58,0.438,59,0.32,60,0.406,61,0.438,62,0.295,63,1.001,64,0.438,65,0.713,66,0.438,67,0.295,68,0.438,69,0.295,70,0.375,71,0.406,72,0.438,73,0.438,74,0.007,75,0.011,76,0.007,107,0.973,132,1.581,134,1.548,137,0.695,149,4.003,165,1.45,169,0.445,173,0.777,177,0.57,186,0.549,190,1.719,197,2.184,200,1.484,213,0.271,216,0.784,217,0.784,223,0.641,225,0.641,227,0.695,228,0.901,232,0.406,242,0.979,249,0.904,269,1.325,270,1.823,273,1.719,275,1.941,292,0.775,293,0.985,297,1.14,313,2.679,314,2.679,315,2.679,316,2.089,317,2.679,318,3.395,319,1.887,320,2.679,321,2.106,322,2.106,324,1.484,325,1.887,326,1.001,327,2.361,328,2.103,329,1.795,330,1.941,331,1.678,332,1.823,335,2.106,337,2.106,338,2.106,340,2.106,343,1.122,346,1.852,348,1.719,352,0.904,354,0.824,356,0.824,357,0.824,358,0.824,359,1.699,360,1.14,361,2.679,362,1.284,363,2.106,364,1.001,367,2.106,368,1.352,369,1.642,370,3.142,371,1.642,372,1.989,373,2.709,374,1.841,375,1.841,376,1.284,377,1.122,378,1.841,379,1.122,380,1.122,381,1.122,382,1.122,383,1.122,384,1.284,385,1.284,386,1.284,387,1.284,388,1.284,389,1.284,390,1.284,391,1.284,392,1.284,393,1.852,394,1.001,395,1.001,396,1.001,397,1.001,398,1.001,399,1.284,401,0.904,403,1.001,404,1.001,405,1.352,406,1.284,407,0.904,408,1.001,410,0.904,411,0.904,412,1.678,413,2.106,416,0.755,417,0.904,418,2.106,419,1.239,420,1.642,421,1.642,422,1.642,423,1.642,424,1.642,425,1.484,426,2.106,427,2.106,428,2.106,429,2.106,430,3.1,431,2.106,467,2.679,471,2.417,473,1.887,474,2.417,494,1.122,496,2.184,505,1.001,506,1.001,508,1.001,509,1.001,526,0.824,673,4.487,680,3.1,696,1.284,698,2.679,699,1.284,701,1.284,703,1.284,737,1.284,738,2.51,739,3.192,740,2.51,741,3.192,742,3.192,743,3.192,744,3.192,745,3.192,746,3.192,747,3.192,748,3.694,749,2.51,750,1.529,751,1.529,752,1.529,753,1.529,754,1.529,755,1.529,756,1.529,757,1.529,758,1.529,759,1.529,760,1.529,761,1.529,762,1.529,763,1.529,764,1.529,765,1.529,766,1.529,767,1.529,768,1.529,769,1.529,770,1.529,771,1.529,772,2.51,773,2.51,774,2.51,775,2.51,776,2.51,777,2.51,778,2.51,779,1.529,780,1.529,781,2.51,782,2.51,783,1.529,784,1.529,785,1.529,786,1.529,787,1.529,788,1.529,789,1.529,790,1.529,791,1.529,792,1.529,793,1.529,794,2.106]],["title/injectables/PostingService.html",[219,0.925,330,1.355]],["body/injectables/PostingService.html",[3,0.217,4,0.185,9,0.154,14,1.237,19,0.217,22,0.825,23,0.03,24,1.377,29,0.605,31,0.708,32,0.357,33,0.217,34,0.013,41,0.825,63,1.121,74,0.013,75,0.018,76,0.013,130,1.457,169,0.735,173,1.102,177,1.411,213,0.523,216,1.51,217,1.51,219,1.188,220,3.08,222,1.457,225,1.237,228,1.06,229,1.745,230,1.457,232,0.783,233,2.454,242,0.783,260,1.457,261,1.931,270,1.457,273,2.806,275,2.686,323,3.484,330,1.74,372,1.59,488,1.931,511,2.477,520,2.477,599,3.484,600,3.484,795,2.477,796,4.151,797,5.209,798,5.209,799,4.151,800,4.151,801,4.151,802,4.151,803,4.151,804,2.952,805,2.952,806,4.151,807,2.952,808,4.151,809,2.952,810,2.952,811,2.952,812,4.151,813,2.952,814,4.151,815,2.952,816,4.151,817,2.952,818,4.151,819,2.952,820,4.151,821,2.952,822,4.151,823,2.952,824,2.952,825,2.477,826,2.952,827,2.952,828,2.952,829,2.952,830,2.952,831,2.952,832,2.952,833,2.952,834,2.952,835,2.952,836,2.952,837,2.952]],["title/components/ProfileComponent.html",[0,0.136,67,0.624]],["body/components/ProfileComponent.html",[0,0.144,1,0.356,2,0.725,3,0.125,4,0.107,5,0.487,6,0.487,7,0.487,8,0.487,9,0.179,11,0.487,12,1.675,13,1.437,15,0.783,17,0.783,19,0.317,20,0.725,22,0.768,23,0.03,24,1.21,25,0.611,26,0.611,29,0.591,31,0.66,32,0.206,33,0.125,34,0.007,35,0.417,36,0.783,37,0.725,38,0.487,39,1.125,40,0.487,41,0.777,42,0.487,43,0.356,44,0.487,45,0.328,46,0.487,47,0.328,48,0.672,49,0.487,50,0.356,51,0.783,52,0.328,53,0.487,54,0.328,55,0.356,56,0.487,57,0.328,58,0.487,59,0.356,60,0.451,61,0.487,62,0.328,63,0.485,64,0.487,65,0.328,66,0.487,67,0.759,68,0.487,69,0.328,70,0.417,71,0.451,72,0.487,73,0.487,74,0.007,75,0.012,76,0.007,107,1.061,132,1.525,134,1.649,137,0.772,169,0.485,173,0.816,186,0.611,190,1.849,199,3.301,211,3.81,213,0.301,216,0.672,217,0.672,223,0.713,225,0.713,227,0.772,228,1.232,229,1.005,231,2.029,232,0.451,235,2.607,239,1.941,242,1.283,244,1.247,246,1.113,254,1.79,269,1.385,275,1.649,278,3.161,280,3.161,281,2.246,282,3.161,292,0.844,293,1.059,297,1.214,327,2.607,328,2.198,329,1.785,330,2.029,331,1.786,332,1.941,348,1.849,354,0.916,356,1.849,357,0.916,358,0.916,359,1.785,360,1.243,364,1.113,368,1.474,370,2.99,393,2.522,405,0.916,412,1.786,416,2.564,444,1.005,496,1.617,504,1.113,526,1.474,573,2.006,576,2.573,607,1.427,608,1.427,609,3.617,624,1.427,625,2.296,626,2.296,627,1.427,629,1.427,675,2.296,681,2.296,685,2.296,687,1.427,708,1.427,709,1.427,729,2.006,732,2.296,838,1.427,839,3.432,840,2.736,841,3.432,842,3.432,843,3.432,844,3.432,845,3.432,846,3.432,847,3.432,848,3.432,849,3.933,850,3.933,851,3.933,852,3.933,853,1.701,854,2.736,855,1.701,856,1.701,857,1.701,858,1.701,859,1.701,860,1.701,861,1.701,862,1.701,863,1.701,864,1.701,865,1.701,866,1.701,867,1.701,868,1.701,869,1.701,870,1.701,871,1.701,872,1.701,873,1.701,874,1.701,875,1.701,876,2.736,877,1.701,878,2.736,879,1.701,880,2.736,881,1.701,882,2.736,883,2.736,884,1.701,885,1.701,886,3.933,887,1.701,888,3.432,889,1.701,890,1.701,891,1.701,892,1.701,893,1.701,894,1.701,895,1.701,896,1.701,897,1.701,898,2.736,899,1.701,900,1.701,901,1.701,902,1.701,903,2.881,904,2.736,905,1.701,906,1.701,907,1.701,908,1.701,909,1.701,910,1.701,911,1.701,912,1.701,913,1.701,914,1.701,915,2.736,916,2.736,917,2.736,918,4.31,919,1.701,920,1.701,921,2.736,922,2.736,923,2.736,924,2.736,925,2.736,926,2.736,927,2.736,928,2.736,929,2.296,930,2.736,931,2.736,932,2.736,933,2.296]],["title/injectables/RouteGuardService.html",[187,2.115,219,0.925]],["body/injectables/RouteGuardService.html",[3,0.309,4,0.263,9,0.219,14,1.759,19,0.309,22,0.704,23,0.03,29,0.506,31,0.693,32,0.508,33,0.309,34,0.018,41,0.704,74,0.018,75,0.023,76,0.018,142,2.261,165,1.906,169,0.929,173,0.744,177,1.191,186,1.507,187,3.432,198,4.402,213,0.744,216,1.288,217,1.288,219,1.501,230,2.072,231,2.638,232,1.113,260,2.072,266,3.078,328,2.9,346,1.906,359,1.627,436,3.078,444,2.481,473,2.481,934,4.802,935,3.522,936,4.197,937,5.245,938,5.994,939,5.722,940,5.994,941,4.197,942,4.197,943,4.197]],["title/components/SignUpComponent.html",[0,0.136,69,0.624]],["body/components/SignUpComponent.html",[0,0.181,1,0.513,2,0.961,3,0.18,4,0.153,5,0.7,6,0.7,7,0.7,8,0.7,9,0.128,11,0.7,12,1.792,13,1.538,15,1.037,17,1.037,19,0.18,20,0.961,22,0.486,23,0.03,25,1.302,26,1.302,29,0.533,31,0.669,32,0.296,33,0.18,34,0.011,35,0.601,36,1.037,37,0.961,38,0.7,39,1.366,40,0.7,41,0.791,42,0.7,43,0.513,44,0.7,45,0.472,46,0.7,47,0.472,48,0.89,49,0.7,50,0.513,51,1.037,52,0.472,53,0.7,54,0.472,55,0.513,56,0.7,57,0.472,58,0.7,59,0.513,60,0.649,61,0.7,62,0.472,63,0.642,64,0.7,65,0.472,66,0.7,67,0.472,68,0.7,69,0.921,70,1.447,71,1.145,72,0.7,73,0.7,74,0.011,75,0.016,76,0.011,107,1.405,122,3.713,132,1.851,134,2.001,137,1.111,165,1.646,169,0.642,173,0.642,177,0.555,186,0.879,197,2.143,213,0.642,216,0.601,217,0.601,227,1.111,228,1.302,235,2.326,242,1.145,269,1.236,275,1.519,278,1.794,280,1.794,282,1.794,292,1.119,293,1.333,297,1.473,307,3.042,308,2.053,309,3.042,316,2.825,319,2.553,324,2.143,325,2.553,326,1.601,327,2.875,328,2.51,329,2.142,331,2.168,332,2.356,346,2.168,348,2.326,352,1.446,354,1.318,356,2.326,357,1.318,359,1.976,360,1.111,368,1.318,370,2.326,393,1.961,394,1.601,395,1.601,396,1.601,397,1.601,398,1.601,401,1.446,403,1.601,404,1.601,405,1.952,407,1.446,408,1.601,410,1.446,411,1.446,412,1.111,416,1.208,417,1.446,419,1.789,530,2.658,533,2.143,534,2.143,553,4.007,573,1.794,574,3.042,575,3.501,576,3.493,630,2.053,729,2.658,929,3.042,944,4.762,945,2.053,946,4.318,947,3.625,948,4.318,949,3.625,950,2.447,951,2.447,952,2.447,953,2.447,954,2.447,955,2.447,956,2.447,957,2.447,958,2.447,959,2.447,960,2.447,961,3.625,962,3.625,963,3.625]],["title/injectables/UserService.html",[219,0.925,329,1.253]],["body/injectables/UserService.html",[3,0.265,4,0.226,9,0.188,14,1.513,19,0.265,22,0.812,23,0.03,24,1.472,29,0.583,31,0.686,32,0.437,33,0.265,34,0.016,41,0.812,74,0.016,75,0.021,76,0.016,130,1.781,169,0.843,173,1.043,177,1.336,213,0.639,216,1.484,217,1.484,219,1.362,220,3.348,222,1.781,225,1.513,228,2.342,229,2.133,230,1.781,232,0.957,233,2.814,242,1.502,260,1.781,261,2.361,329,1.846,903,4.754,933,3.995,964,3.028,965,4.76,966,4.76,967,4.76,968,3.608,969,4.76,970,3.608,971,4.76,972,3.608,973,4.76,974,3.608,975,4.76,976,3.608,977,4.76,978,3.608,979,3.608,980,3.608,981,3.608,982,3.608,983,3.608]],["title/coverage.html",[984,3.71]],["body/coverage.html",[0,0.271,1,0.681,9,0.17,10,2.728,22,0.436,23,0.03,34,0.026,43,0.681,45,0.627,47,0.627,50,0.681,52,0.627,54,0.627,55,0.681,57,0.627,59,0.681,62,0.627,63,0.576,65,0.627,67,0.627,69,0.627,74,0.014,75,0.02,76,0.014,91,1.921,113,2.383,115,2.383,117,2.126,119,2.126,122,2.126,126,2.126,141,2.383,142,1.75,148,2.126,149,2.126,166,2.383,168,2.728,187,2.126,208,2.126,209,2.623,210,3.254,219,1.679,222,1.604,223,1.362,224,2.126,228,1.167,231,1.362,239,1.604,270,1.604,271,2.728,277,2.728,291,2.728,310,2.728,329,1.26,330,1.362,433,2.728,434,2.728,452,3.254,453,2.728,458,3.254,496,3.994,548,2.728,577,2.126,578,2.728,586,2.126,587,2.728,598,2.728,611,2.728,632,2.728,633,2.728,642,2.728,643,2.728,660,2.728,673,3.254,674,2.728,737,2.728,795,2.728,838,2.728,934,2.728,935,2.728,944,2.728,945,2.728,964,2.728,984,2.728,985,3.25,986,3.25,987,3.25,988,6.27,989,3.25,990,4.24,991,6.004,992,6.004,993,3.25,994,3.25,995,4.437,996,3.25,997,3.25,998,4.437,999,5.429,1000,3.25,1001,3.25,1002,3.25,1003,2.728,1004,3.724,1005,2.728,1006,3.724,1007,2.728,1008,2.728,1009,3.25,1010,3.25]],["title/dependencies.html",[80,2.545,1011,2.695]],["body/dependencies.html",[9,0.223,23,0.03,32,0.518,74,0.019,75,0.023,76,0.019,80,2.801,82,3.139,98,4.457,99,3.475,102,3.139,103,3.593,107,2.34,108,3.593,132,1.66,134,1.794,137,1.944,145,3.475,146,3.139,147,3.139,152,3.593,153,3.593,186,1.537,825,3.593,1012,4.281,1013,5.437,1014,4.281,1015,5.31,1016,4.281,1017,4.281,1018,4.281,1019,4.281,1020,4.281,1021,4.281,1022,4.281,1023,4.281,1024,4.281,1025,4.281,1026,4.281,1027,4.281,1028,4.281,1029,4.281,1030,4.281,1031,4.281,1032,4.281,1033,4.281,1034,4.281,1035,4.281,1036,4.281,1037,4.281,1038,4.281,1039,4.281,1040,4.281]],["title/index.html",[19,0.198,1041,2.695,1042,2.695]],["body/index.html",[0,0.241,4,0.265,13,1.037,23,0.023,41,0.567,74,0.019,75,0.023,76,0.019,94,3.098,102,4.209,145,4.183,176,3.545,239,2.085,491,3.545,546,3.545,640,4.42,794,3.545,1013,3.545,1043,4.225,1044,5.267,1045,4.225,1046,5.739,1047,4.225,1048,4.225,1049,6.182,1050,4.225,1051,4.225,1052,4.225,1053,4.225,1054,4.225,1055,4.225,1056,4.225,1057,4.225,1058,5.739,1059,5.739,1060,4.225,1061,6.182,1062,4.225,1063,4.225,1064,4.225,1065,4.225,1066,4.225,1067,4.225,1068,3.545,1069,5.267,1070,5.267,1071,6.008,1072,4.225,1073,5.267,1074,5.267,1075,4.225,1076,6.008,1077,4.225,1078,4.225,1079,5.739,1080,4.225,1081,4.225,1082,4.225]],["title/modules.html",[79,2.614]],["body/modules.html",[23,0.026,74,0.023,75,0.026,76,0.023,78,3.369,79,3.044,90,3.044,99,3.369,425,3.044,1083,5.149,1084,5.93,1085,5.149,1086,5.149]],["title/overview.html",[1087,3.71]],["body/overview.html",[1,1.315,2,1.032,23,0.03,35,0.955,43,1.157,45,1.066,47,1.066,50,1.157,52,1.066,54,1.066,55,1.157,57,1.066,59,1.157,62,1.066,65,1.066,67,1.066,69,1.066,74,0.017,75,0.022,76,0.017,77,2.547,78,4.473,79,2.301,80,2.547,81,3.267,82,2.855,83,3.267,84,2.855,85,3.267,86,3.267,87,3.267,88,3.267,89,3.267,90,3.266,91,3.266,92,4.197,93,3.267,94,2.855,167,1.921,184,2.547,260,1.921,526,2.096,530,3.667,1087,3.267,1088,5.001]],["title/routes.html",[184,2.893]],["body/routes.html",[23,0.026,74,0.023,75,0.026,76,0.023,184,3.452]],["title/miscellaneous/variables.html",[1089,2.262,1090,3.265]],["body/miscellaneous/variables.html",[19,0.32,22,0.863,23,0.03,24,1.32,25,2.28,26,2.28,74,0.019,75,0.024,76,0.019,165,2.435,222,2.647,223,2.248,224,3.804,343,3.932,346,1.975,564,3.649,990,3.649,1003,3.649,1004,5.094,1005,3.649,1006,3.649,1007,4.5,1008,4.5,1068,4.5,1089,3.649,1090,3.649,1091,5.814,1092,5.362,1093,4.348,1094,4.348,1095,4.348,1096,4.348,1097,4.348,1098,4.348]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":496,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["0.10.3",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["0.2.14",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":993,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":507,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["1).split",{"_index":789,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["10.0.0",{"_index":1013,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["10.0.1",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":509,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["13.2.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1088,"title":{},"body":{"overview.html":{}}}],["2",{"_index":526,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":784,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["2000",{"_index":705,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["2021",{"_index":303,"title":{},"body":{"components/FooterComponent.html":{}}}],["3",{"_index":527,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["3.5.1",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["3.8.1",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":528,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["4.7.0",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":203,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["5",{"_index":529,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["6",{"_index":530,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["6.1.0",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":391,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["8.0.0",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["accept",{"_index":963,"title":{},"body":{"components/SignUpComponent.html":{}}}],["access",{"_index":397,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["accessors",{"_index":324,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["account",{"_index":576,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["activatedroute",{"_index":474,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["activatedroutesnapshot",{"_index":938,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["actual_component",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["address",{"_index":574,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["allicons",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["allowsearchfilter",{"_index":392,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["amp",{"_index":308,"title":{},"body":{"components/FooterComponent.html":{},"components/SignUpComponent.html":{}}}],["analyst",{"_index":424,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["angular",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["angular/material/form",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":186,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["api_url",{"_index":222,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"index.html":{}}}],["app.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.constants",{"_index":225,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appliedemail",{"_index":592,"title":{},"body":{"injectables/MailService.html":{}}}],["apply",{"_index":735,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["applyform",{"_index":678,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["appmodule",{"_index":78,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":166,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":90,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":1062,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.service.ts",{"_index":434,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:12",{"_index":442,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["auth.service.ts:8",{"_index":437,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["authenticated_user",{"_index":223,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticateduser",{"_index":1096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication.service",{"_index":444,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{}}}],["authentication.service.ts",{"_index":210,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"coverage.html":{}}}],["authentication.service.ts:10",{"_index":262,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:14",{"_index":267,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:31",{"_index":264,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:35",{"_index":263,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:41",{"_index":265,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:46",{"_index":268,"title":{},"body":{"injectables/BasicAuthenticationService.html":{}}}],["authentication.service.ts:53",{"_index":215,"title":{},"body":{"classes/AuthenticationBean.html":{}}}],["authentication.service.ts:54",{"_index":218,"title":{},"body":{"classes/AuthenticationBean.html":{}}}],["authenticationbean",{"_index":208,"title":{"classes/AuthenticationBean.html":{}},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"coverage.html":{}}}],["authorization",{"_index":240,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{}}}],["automatically",{"_index":1054,"title":{},"body":{"index.html":{}}}],["available",{"_index":1086,"title":{},"body":{"modules.html":{}}}],["awesome",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":547,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/PostingDetailsComponent.html":{}}}],["backend",{"_index":420,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["base64data",{"_index":841,"title":{},"body":{"components/ProfileComponent.html":{}}}],["basic",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/RouteGuardService.html":{},"coverage.html":{}}}],["basicauthenticationservice",{"_index":231,"title":{"injectables/BasicAuthenticationService.html":{}},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"coverage.html":{}}}],["basicauthheaderstring",{"_index":236,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{}}}],["better",{"_index":650,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["board",{"_index":193,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/JobBoardComponent.html":{},"components/LoginComponent.html":{}}}],["board'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["board.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["board.component.css",{"_index":454,"title":{},"body":{"components/JobBoardComponent.html":{}}}],["board.component.html",{"_index":455,"title":{},"body":{"components/JobBoardComponent.html":{}}}],["board.component.ts",{"_index":453,"title":{},"body":{"components/JobBoardComponent.html":{},"coverage.html":{}}}],["board.component.ts:12",{"_index":457,"title":{},"body":{"components/JobBoardComponent.html":{}}}],["board.component.ts:8",{"_index":456,"title":{},"body":{"components/JobBoardComponent.html":{}}}],["board/category/:category",{"_index":195,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["board/job",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/JobBoardComponent.html":{},"coverage.html":{}}}],["board/language/:requirement",{"_index":196,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["board/localization/:localization",{"_index":194,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["boolean",{"_index":266,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"components/JobPostingsComponent.html":{},"injectables/RouteGuardService.html":{}}}],["bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["break",{"_index":525,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["browse",{"_index":1084,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":178,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1061,"title":{},"body":{"index.html":{}}}],["c",{"_index":378,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["canactivate",{"_index":198,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/RouteGuardService.html":{}}}],["canactivate(route",{"_index":937,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["careers",{"_index":723,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["case",{"_index":524,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["category",{"_index":270,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"coverage.html":{}}}],["categoryid",{"_index":520,"title":{},"body":{"components/JobPostingsComponent.html":{},"injectables/PostingService.html":{}}}],["categoryname",{"_index":272,"title":{},"body":{"classes/Category.html":{}}}],["change",{"_index":794,"title":{},"body":{"components/PostingEditComponent.html":{},"index.html":{}}}],["changes",{"_index":932,"title":{},"body":{"components/ProfileComponent.html":{}}}],["characters",{"_index":962,"title":{},"body":{"components/SignUpComponent.html":{}}}],["check",{"_index":1081,"title":{},"body":{"index.html":{}}}],["chips",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["choose",{"_index":928,"title":{},"body":{"components/ProfileComponent.html":{}}}],["class",{"_index":34,"title":{"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"classes/Category.html":{},"classes/Company.html":{},"classes/Mail.html":{},"classes/Posting.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":167,"title":{},"body":{"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"classes/Category.html":{},"classes/Company.html":{},"classes/Mail.html":{},"classes/Posting.html":{},"overview.html":{}}}],["cli",{"_index":1046,"title":{},"body":{"index.html":{}}}],["click",{"_index":927,"title":{},"body":{"components/ProfileComponent.html":{}}}],["clicklabel",{"_index":849,"title":{},"body":{"components/ProfileComponent.html":{}}}],["cluster_appmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1056,"title":{},"body":{"index.html":{}}}],["common/category",{"_index":826,"title":{},"body":{"injectables/PostingService.html":{}}}],["common/company",{"_index":229,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["common/mail",{"_index":595,"title":{},"body":{"injectables/MailService.html":{}}}],["common/posting",{"_index":488,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"injectables/PostingService.html":{}}}],["company",{"_index":228,"title":{"classes/Company.html":{}},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Company.html":{},"components/FormComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["companyemail",{"_index":591,"title":{},"body":{"injectables/MailService.html":{}}}],["companyname",{"_index":369,"title":{},"body":{"components/FormComponent.html":{},"injectables/MailService.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["conditions",{"_index":309,"title":{},"body":{"components/FooterComponent.html":{},"components/SignUpComponent.html":{}}}],["connection",{"_index":533,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/SignUpComponent.html":{}}}],["console.log(data",{"_index":365,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(this.posting",{"_index":704,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["console.log(this.postingform.value",{"_index":402,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(this.postings",{"_index":500,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["console.log(this.registerform.value",{"_index":957,"title":{},"body":{"components/SignUpComponent.html":{}}}],["console.log(this.tempcompanyname",{"_index":366,"title":{},"body":{"components/FormComponent.html":{}}}],["const",{"_index":190,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{}}}],["constructor",{"_index":213,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["constructor(basicauthenticationservice",{"_index":436,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{},"components/NavbarComponent.html":{},"injectables/RouteGuardService.html":{}}}],["constructor(formbuilder",{"_index":326,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["constructor(http",{"_index":261,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/UserService.html":{}}}],["constructor(message",{"_index":214,"title":{},"body":{"classes/AuthenticationBean.html":{}}}],["constructor(postingservice",{"_index":472,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{}}}],["constructor(private",{"_index":232,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":259,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["constructor(userservice",{"_index":853,"title":{},"body":{"components/ProfileComponent.html":{}}}],["content",{"_index":180,"title":{},"body":{"classes/AppPage.html":{}}}],["context",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["convenience",{"_index":394,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["convertedimage",{"_index":842,"title":{},"body":{"components/ProfileComponent.html":{}}}],["copy",{"_index":301,"title":{},"body":{"components/FooterComponent.html":{}}}],["copyright",{"_index":300,"title":{},"body":{"components/FooterComponent.html":{}}}],["core",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":984,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":575,"title":{},"body":{"components/LoginComponent.html":{},"components/PageHeaderComponent.html":{},"components/SignUpComponent.html":{}}}],["current",{"_index":542,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["currentcategory",{"_index":461,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["currentlanguage",{"_index":462,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["currentlocalization",{"_index":463,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["customers",{"_index":652,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["cv",{"_index":733,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["d",{"_index":658,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["data",{"_index":412,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["data._embedded.postings",{"_index":499,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["data.categoryname",{"_index":703,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["data.description",{"_index":791,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.email",{"_index":246,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["data.firstname",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data.localization",{"_index":790,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.maxsalary",{"_index":793,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.minsalary",{"_index":792,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.name",{"_index":364,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{}}}],["data.password",{"_index":244,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/ProfileComponent.html":{}}}],["data.phonenumber",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data.pic",{"_index":504,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["data.positionname",{"_index":785,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.requirement",{"_index":787,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.requirement.slice(0",{"_index":788,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["data.surname",{"_index":879,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data['_embedded']['postings",{"_index":917,"title":{},"body":{"components/ProfileComponent.html":{}}}],["database",{"_index":534,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/SignUpComponent.html":{}}}],["declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":933,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["delete(email",{"_index":969,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteaccount",{"_index":850,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deletealluserpostings",{"_index":851,"title":{},"body":{"components/ProfileComponent.html":{}}}],["deleted",{"_index":607,"title":{},"body":{"components/MyPostingsComponent.html":{},"components/ProfileComponent.html":{}}}],["deleteposting",{"_index":599,"title":{},"body":{"components/MyPostingsComponent.html":{},"injectables/PostingService.html":{}}}],["deleteposting(id",{"_index":600,"title":{},"body":{"components/MyPostingsComponent.html":{},"injectables/PostingService.html":{}}}],["dependencies",{"_index":80,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":373,"title":{},"body":{"components/FormComponent.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["deselect",{"_index":389,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["details",{"_index":675,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["details'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["details.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["details.component.css",{"_index":676,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.html",{"_index":677,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts",{"_index":674,"title":{},"body":{"components/PostingDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:17",{"_index":693,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":690,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:19",{"_index":691,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":692,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:21",{"_index":682,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:33",{"_index":684,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:46",{"_index":683,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:52",{"_index":688,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:75",{"_index":694,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:78",{"_index":686,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details.component.ts:82",{"_index":689,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["details/:id",{"_index":192,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details/posting",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostingDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":1051,"title":{},"body":{"index.html":{}}}],["development",{"_index":1048,"title":{},"body":{"index.html":{}}}],["devops",{"_index":423,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["directives",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1060,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1065,"title":{},"body":{"index.html":{}}}],["display",{"_index":901,"title":{},"body":{"components/ProfileComponent.html":{}}}],["dist",{"_index":1064,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"add",{"_index":912,"title":{},"body":{"components/ProfileComponent.html":{}}}],["documentation",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["dropdown",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"dependencies.html":{}}}],["dropdownlist",{"_index":313,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["dropdownsettings",{"_index":314,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["dynamic",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1077,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":168,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":175,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":172,"title":{},"body":{"classes/AppPage.html":{}}}],["easy",{"_index":396,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["edit",{"_index":738,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["edit.component",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["edit.component.css",{"_index":739,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.html",{"_index":740,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts",{"_index":737,"title":{},"body":{"components/PostingEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:144",{"_index":752,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:147",{"_index":753,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:151",{"_index":750,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:156",{"_index":754,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:18",{"_index":760,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:19",{"_index":759,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:20",{"_index":762,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:21",{"_index":756,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:22",{"_index":761,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:23",{"_index":757,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:25",{"_index":758,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:26",{"_index":764,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:27",{"_index":768,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:28",{"_index":763,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:29",{"_index":769,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:30",{"_index":770,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:31",{"_index":766,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:32",{"_index":765,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:33",{"_index":767,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:34",{"_index":749,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:44",{"_index":751,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:89",{"_index":771,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit.component.ts:92",{"_index":755,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["edit/posting",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/PostingEditComponent.html":{},"coverage.html":{}}}],["edited",{"_index":781,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["editposting",{"_index":796,"title":{},"body":{"injectables/PostingService.html":{}}}],["editposting(id",{"_index":806,"title":{},"body":{"injectables/PostingService.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["element(by.css('app",{"_index":179,"title":{},"body":{"classes/AppPage.html":{}}}],["email",{"_index":242,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Company.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["emailvalue",{"_index":315,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["end",{"_index":1076,"title":{},"body":{"index.html":{}}}],["ends",{"_index":506,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["environment",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":416,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["error.status",{"_index":783,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["etc",{"_index":428,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["event",{"_index":687,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["event.target.files[0",{"_index":708,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["event1",{"_index":843,"title":{},"body":{"components/ProfileComponent.html":{}}}],["event2",{"_index":909,"title":{},"body":{"components/ProfileComponent.html":{}}}],["execute",{"_index":1073,"title":{},"body":{"index.html":{}}}],["experiences",{"_index":651,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f",{"_index":325,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["false",{"_index":346,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["feather",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["feather/icons",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["feathermodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["feathermodule.pick(allicons",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["field",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["fields",{"_index":398,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["filereader",{"_index":906,"title":{},"body":{"components/ProfileComponent.html":{}}}],["files",{"_index":1055,"title":{},"body":{"index.html":{}}}],["filetoupload",{"_index":679,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["first",{"_index":356,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["firstandlastname",{"_index":579,"title":{},"body":{"classes/Mail.html":{},"injectables/MailService.html":{},"components/PostingDetailsComponent.html":{}}}],["firstloaded",{"_index":464,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["firstname",{"_index":278,"title":{},"body":{"classes/Company.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["flag",{"_index":1067,"title":{},"body":{"index.html":{}}}],["folder",{"_index":734,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["font",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":294,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["footer.component.css",{"_index":295,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":296,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":43,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":197,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["form'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["form.component.css",{"_index":311,"title":{},"body":{"components/FormComponent.html":{}}}],["form.component.html",{"_index":312,"title":{},"body":{"components/FormComponent.html":{}}}],["form/form.component",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["formbuilder",{"_index":327,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["formcomponent",{"_index":45,"title":{"components/FormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formdata",{"_index":709,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["formdata.append('pdffile",{"_index":710,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["formgroup",{"_index":348,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["formsmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":634,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["found.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["found.component.css",{"_index":635,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":636,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":633,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:12",{"_index":638,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts:8",{"_index":637,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NotFoundComponent.html":{},"coverage.html":{}}}],["frontend",{"_index":421,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["full",{"_index":206,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PostingDetailsComponent.html":{}}}],["fullstack",{"_index":422,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["further",{"_index":1078,"title":{},"body":{"index.html":{}}}],["gdańsk",{"_index":653,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["generate",{"_index":1058,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1045,"title":{},"body":{"index.html":{}}}],["get(email",{"_index":971,"title":{},"body":{"injectables/UserService.html":{}}}],["get(id",{"_index":808,"title":{},"body":{"injectables/PostingService.html":{}}}],["getall",{"_index":797,"title":{},"body":{"injectables/PostingService.html":{}}}],["getallpostingcategories",{"_index":798,"title":{},"body":{"injectables/PostingService.html":{}}}],["getallpostingsforcompany",{"_index":799,"title":{},"body":{"injectables/PostingService.html":{}}}],["getallpostingsforcompany(email",{"_index":812,"title":{},"body":{"injectables/PostingService.html":{}}}],["getauthenticatedtoken",{"_index":250,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["getauthenticateduser",{"_index":248,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["getbycategory",{"_index":800,"title":{},"body":{"injectables/PostingService.html":{}}}],["getbycategory(categoryid",{"_index":814,"title":{},"body":{"injectables/PostingService.html":{}}}],["getbylanguage",{"_index":801,"title":{},"body":{"injectables/PostingService.html":{}}}],["getbylanguage(requirement",{"_index":816,"title":{},"body":{"injectables/PostingService.html":{}}}],["getbylocalization",{"_index":802,"title":{},"body":{"injectables/PostingService.html":{}}}],["getbylocalization(localization",{"_index":818,"title":{},"body":{"injectables/PostingService.html":{}}}],["getcategory",{"_index":803,"title":{},"body":{"injectables/PostingService.html":{}}}],["getcategory(id",{"_index":820,"title":{},"body":{"injectables/PostingService.html":{}}}],["getf",{"_index":352,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["getpictures",{"_index":469,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["getter",{"_index":395,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["getting",{"_index":1041,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":170,"title":{},"body":{"classes/AppPage.html":{}}}],["getvalues",{"_index":680,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["go",{"_index":546,"title":{},"body":{"components/JobPostingsComponent.html":{},"index.html":{}}}],["graph",{"_index":1085,"title":{},"body":{"modules.html":{}}}],["guard.service",{"_index":189,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":935,"title":{},"body":{"injectables/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":941,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["guard.service.ts:8",{"_index":936,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["handlepostinglist",{"_index":470,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["header",{"_index":644,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["header.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["header.component.css",{"_index":645,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.html",{"_index":646,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.ts",{"_index":643,"title":{},"body":{"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:12",{"_index":648,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header.component.ts:8",{"_index":647,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["header/page",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["headers",{"_index":238,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["help",{"_index":1079,"title":{},"body":{"index.html":{}}}],["helping",{"_index":649,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["here",{"_index":404,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["home",{"_index":641,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["http",{"_index":233,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1053,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":220,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["httphandler",{"_index":441,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["httpheaders",{"_index":221,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["httpintercepterbasicauthservice",{"_index":91,"title":{"injectables/HttpIntercepterBasicAuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["httprequest",{"_index":439,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["https://joinitwebsite.azurewebsites.net",{"_index":1095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":273,"title":{},"body":{"classes/Category.html":{},"components/MyPostingsComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{}}}],["identifier",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["idropdownsettings",{"_index":355,"title":{},"body":{"components/FormComponent.html":{}}}],["if(basicauthheaderstring",{"_index":448,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["if(this.basicauthenticationservice.isuserloggedin",{"_index":942,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["image",{"_index":903,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/UserService.html":{}}}],["imageid",{"_index":844,"title":{},"body":{"components/ProfileComponent.html":{}}}],["imagetype",{"_index":279,"title":{},"body":{"classes/Company.html":{}}}],["imgurl",{"_index":845,"title":{},"body":{"components/ProfileComponent.html":{}}}],["implements",{"_index":292,"title":{},"body":{"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["injectable",{"_index":219,"title":{"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{}},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":260,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["intercept",{"_index":435,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["intercept(request",{"_index":438,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["intercepter",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"coverage.html":{}}}],["introduce",{"_index":730,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["introduction",{"_index":580,"title":{},"body":{"classes/Mail.html":{},"injectables/MailService.html":{},"components/PostingDetailsComponent.html":{}}}],["invalid",{"_index":405,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["isuserloggedin",{"_index":253,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/NavbarComponent.html":{}}}],["item",{"_index":337,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["items",{"_index":340,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["itemsshowlimit",{"_index":390,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["java",{"_index":377,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["javascript",{"_index":379,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["job",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["jobboardcomponent",{"_index":47,"title":{"components/JobBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jobpostingscomponent",{"_index":50,"title":{"components/JobPostingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":302,"title":{},"body":{"components/FooterComponent.html":{},"components/PageHeaderComponent.html":{}}}],["joinit",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["joinitui",{"_index":1043,"title":{},"body":{"index.html":{}}}],["jpg",{"_index":923,"title":{},"body":{"components/ProfileComponent.html":{}}}],["jquery",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":1075,"title":{},"body":{"index.html":{}}}],["kotlin",{"_index":382,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["kraków",{"_index":656,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["label",{"_index":911,"title":{},"body":{"components/ProfileComponent.html":{}}}],["label.click",{"_index":913,"title":{},"body":{"components/ProfileComponent.html":{}}}],["larger",{"_index":925,"title":{},"body":{"components/ProfileComponent.html":{}}}],["last",{"_index":729,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["layout/footer/footer.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/navbar/navbar.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"overview.html":{}}}],["line",{"_index":563,"title":{},"body":{"components/LoginComponent.html":{}}}],["literal",{"_index":564,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":316,"title":{},"body":{"components/FormComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["localization",{"_index":372,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"injectables/MailService.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{}}}],["localization=${localization}&positionname=${positionname",{"_index":597,"title":{},"body":{"injectables/MailService.html":{}}}],["localstorage.getitem('foo",{"_index":489,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["localstorage.removeitem('foo",{"_index":493,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["localstorage.setitem('foo",{"_index":490,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["location.reload",{"_index":492,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["login",{"_index":202,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/BasicAuthenticationService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["login(email",{"_index":234,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["login.component.css",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["logincomponent",{"_index":52,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginform",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":256,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/NavbarComponent.html":{}}}],["made",{"_index":414,"title":{},"body":{"components/FormComponent.html":{}}}],["mail",{"_index":577,"title":{"classes/Mail.html":{}},"body":{"classes/Mail.html":{},"injectables/MailService.html":{},"coverage.html":{}}}],["mailservice",{"_index":586,"title":{"injectables/MailService.html":{}},"body":{"injectables/MailService.html":{},"components/PostingDetailsComponent.html":{},"coverage.html":{}}}],["map",{"_index":226,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["matching",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["materialfileinputmodule",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":431,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["maxsalary",{"_index":375,"title":{},"body":{"components/FormComponent.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["mb",{"_index":926,"title":{},"body":{"components/ProfileComponent.html":{}}}],["message",{"_index":212,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["methods",{"_index":169,"title":{},"body":{"classes/AppPage.html":{},"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["middot",{"_index":306,"title":{},"body":{"components/FooterComponent.html":{}}}],["min",{"_index":961,"title":{},"body":{"components/SignUpComponent.html":{}}}],["minimum",{"_index":429,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["minsalary",{"_index":374,"title":{},"body":{"components/FormComponent.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["miscellaneous",{"_index":1089,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":77,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":79,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1080,"title":{},"body":{"index.html":{}}}],["multi",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["multiselect",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"dependencies.html":{}}}],["mypostingscomponent",{"_index":54,"title":{"components/MyPostingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["navbar",{"_index":612,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["navbar.component.css",{"_index":613,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":614,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":55,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":1052,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":171,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp;&nbsp",{"_index":930,"title":{},"body":{"components/ProfileComponent.html":{}}}],["new",{"_index":239,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":440,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{},"components/LoginComponent.html":{}}}],["next.handle(request",{"_index":451,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["ng",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngmodule",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngmultiselectdropdownmodule",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmultiselectdropdownmodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":297,"title":{},"body":{"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["ngx",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["ngxspinnermodule",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["ngxspinnerservice",{"_index":331,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["notfoundcomponent",{"_index":57,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":736,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["null",{"_index":255,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["number",{"_index":275,"title":{},"body":{"classes/Category.html":{},"classes/Company.html":{},"components/MyPostingsComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["object",{"_index":343,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":824,"title":{},"body":{"injectables/PostingService.html":{}}}],["occured",{"_index":918,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ocurred",{"_index":610,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["offer",{"_index":631,"title":{},"body":{"components/NavbarComponent.html":{}}}],["offers",{"_index":535,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["onfilechanged",{"_index":681,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["onfilechanged(event",{"_index":685,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["oninit",{"_index":293,"title":{},"body":{"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["onitemselect",{"_index":321,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["onitemselect(item",{"_index":335,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["onselectall",{"_index":322,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["onselectall(items",{"_index":338,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["onsubmit",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{},"components/SignUpComponent.html":{}}}],["open",{"_index":543,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{}}}],["opening",{"_index":419,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["optional",{"_index":217,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":1087,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1011,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["pageheadercomponent",{"_index":59,"title":{"components/PageHeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["parameters",{"_index":216,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["password",{"_index":235,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Company.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["path",{"_index":191,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":205,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pdf",{"_index":594,"title":{},"body":{"injectables/MailService.html":{},"components/PostingDetailsComponent.html":{}}}],["pdffile",{"_index":581,"title":{},"body":{"classes/Mail.html":{},"components/PostingDetailsComponent.html":{}}}],["phone",{"_index":929,"title":{},"body":{"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["phonenumber",{"_index":280,"title":{},"body":{"classes/Company.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["php",{"_index":383,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["pic",{"_index":281,"title":{},"body":{"classes/Company.html":{},"components/NavbarComponent.html":{},"classes/Posting.html":{},"components/ProfileComponent.html":{}}}],["pics",{"_index":465,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["picture",{"_index":922,"title":{},"body":{"components/ProfileComponent.html":{}}}],["pipe(first",{"_index":410,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["pipe(map(data",{"_index":243,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["png",{"_index":924,"title":{},"body":{"components/ProfileComponent.html":{}}}],["policy",{"_index":305,"title":{},"body":{"components/FooterComponent.html":{}}}],["positionname",{"_index":371,"title":{},"body":{"components/FormComponent.html":{},"injectables/MailService.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["positions",{"_index":544,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{}}}],["post",{"_index":432,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{}}}],["posting",{"_index":63,"title":{"classes/Posting.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["posting.description",{"_index":728,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["posting.localization",{"_index":724,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["posting.positionname",{"_index":727,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["posting.postingcategory",{"_index":726,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["postingcategory",{"_index":661,"title":{},"body":{"classes/Posting.html":{}}}],["postingdetailscomponent",{"_index":62,"title":{"components/PostingDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postingeditcomponent",{"_index":65,"title":{"components/PostingEditComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["postingform",{"_index":317,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["postings",{"_index":200,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingEditComponent.html":{}}}],["postings'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["postings.component",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["postings.component.css",{"_index":459,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings.component.html",{"_index":460,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings.component.ts",{"_index":458,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"coverage.html":{}}}],["postings.component.ts:14",{"_index":484,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:15",{"_index":483,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:16",{"_index":486,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings.component.ts:17",{"_index":487,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings.component.ts:18",{"_index":482,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:19",{"_index":485,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:21",{"_index":481,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:22",{"_index":480,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:23",{"_index":475,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:24",{"_index":602,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["postings.component.ts:29",{"_index":601,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["postings.component.ts:31",{"_index":478,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:37",{"_index":603,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["postings.component.ts:46",{"_index":476,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.component.ts:54",{"_index":479,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings.component.ts:81",{"_index":477,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["postings.length",{"_index":536,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["postings/:id",{"_index":201,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["postings/job",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/JobPostingsComponent.html":{},"coverage.html":{}}}],["postings/my",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MyPostingsComponent.html":{},"coverage.html":{}}}],["postingservice",{"_index":330,"title":{"injectables/PostingService.html":{}},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["postjob",{"_index":323,"title":{},"body":{"components/FormComponent.html":{},"injectables/PostingService.html":{}}}],["postjob(posting",{"_index":822,"title":{},"body":{"injectables/PostingService.html":{}}}],["pozna",{"_index":657,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["privacy",{"_index":304,"title":{},"body":{"components/FooterComponent.html":{}}}],["private",{"_index":359,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{}}}],["processresultforpostings",{"_index":471,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["prod",{"_index":1066,"title":{},"body":{"index.html":{}}}],["production",{"_index":1068,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":199,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["profile.component.css",{"_index":839,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":840,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profilecomponent",{"_index":67,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":1044,"title":{},"body":{"index.html":{}}}],["promise",{"_index":174,"title":{},"body":{"classes/AppPage.html":{},"components/JobPostingsComponent.html":{}}}],["promise.resolve(true",{"_index":502,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthenticationBean.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["protractor",{"_index":176,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":230,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":211,"title":{},"body":{"classes/AuthenticationBean.html":{},"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["put",{"_index":965,"title":{},"body":{"injectables/UserService.html":{}}}],["put(email",{"_index":973,"title":{},"body":{"injectables/UserService.html":{}}}],["putjob",{"_index":748,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["python",{"_index":380,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["reactiveformsmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["reader",{"_index":905,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reader.onload",{"_index":908,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reader.readasdataurl(event.target.files[0",{"_index":907,"title":{},"body":{"components/ProfileComponent.html":{}}}],["reader.result",{"_index":910,"title":{},"body":{"components/ProfileComponent.html":{}}}],["readme",{"_index":1082,"title":{},"body":{"index.html":{}}}],["receivedimagedata",{"_index":846,"title":{},"body":{"components/ProfileComponent.html":{}}}],["redirectto",{"_index":204,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refreshed",{"_index":466,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["register",{"_index":966,"title":{},"body":{"injectables/UserService.html":{}}}],["register(company",{"_index":975,"title":{},"body":{"injectables/UserService.html":{}}}],["registerform",{"_index":948,"title":{},"body":{"components/SignUpComponent.html":{}}}],["reload",{"_index":491,"title":{},"body":{"components/JobPostingsComponent.html":{},"index.html":{}}}],["remote",{"_index":659,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["request",{"_index":443,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["request.clone",{"_index":449,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["requested",{"_index":639,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["require",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirement",{"_index":511,"title":{},"body":{"components/JobPostingsComponent.html":{},"injectables/PostingService.html":{}}}],["requirements",{"_index":318,"title":{},"body":{"components/FormComponent.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responsibilities",{"_index":427,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["result",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":177,"title":{},"body":{"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":173,"title":{},"body":{"classes/AppPage.html":{},"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{}}}],["returnurl",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"injectables/MailService.html":{},"injectables/PostingService.html":{},"injectables/RouteGuardService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["route",{"_index":473,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/RouteGuardService.html":{}}}],["routeguardservice",{"_index":187,"title":{"injectables/RouteGuardService.html":{}},"body":{"modules/AppRoutingModule.html":{},"injectables/RouteGuardService.html":{},"coverage.html":{}}}],["router",{"_index":328,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{}}}],["routermodule",{"_index":185,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":207,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":940,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["routes",{"_index":184,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.ts",{"_index":183,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1049,"title":{},"body":{"index.html":{}}}],["running",{"_index":1069,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":825,"title":{},"body":{"injectables/PostingService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":227,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["salary",{"_index":430,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["save",{"_index":931,"title":{},"body":{"components/ProfileComponent.html":{}}}],["scaffolding",{"_index":1057,"title":{},"body":{"index.html":{}}}],["search",{"_index":545,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["seconds",{"_index":508,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["select",{"_index":387,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["selectalltext",{"_index":386,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["selected",{"_index":902,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selectedfile",{"_index":847,"title":{},"body":{"components/ProfileComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["sendemail",{"_index":588,"title":{},"body":{"injectables/MailService.html":{},"components/PostingDetailsComponent.html":{}}}],["sendemail(pdf",{"_index":590,"title":{},"body":{"injectables/MailService.html":{}}}],["serve",{"_index":1050,"title":{},"body":{"index.html":{}}}],["server",{"_index":640,"title":{},"body":{"components/NotFoundComponent.html":{},"index.html":{}}}],["service/basic",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{}}}],["service/http/http",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["service/mail.service",{"_index":695,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["service/posting.service",{"_index":358,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{}}}],["service/route",{"_index":188,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["service/user.service",{"_index":357,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["sessionstorage.getitem(authenticated_user",{"_index":249,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/FormComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingEditComponent.html":{}}}],["sessionstorage.getitem(token",{"_index":252,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["sessionstorage.removeitem(authenticated_user",{"_index":257,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["sessionstorage.removeitem(token",{"_index":258,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["sessionstorage.setitem(authenticated_user",{"_index":245,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["sessionstorage.setitem(token",{"_index":247,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["setheaders",{"_index":450,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["settimeout",{"_index":505,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["sign",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["signupcomponent",{"_index":69,"title":{"components/SignUpComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singleselection",{"_index":385,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["span')).gettext",{"_index":181,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["src/.../app.constants.ts",{"_index":1091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":182,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.constants",{"_index":621,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/app.constants.ts",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/common/category.ts",{"_index":271,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/app/common/category.ts:2",{"_index":276,"title":{},"body":{"classes/Category.html":{}}}],["src/app/common/category.ts:3",{"_index":274,"title":{},"body":{"classes/Category.html":{}}}],["src/app/common/company.ts",{"_index":277,"title":{},"body":{"classes/Company.html":{},"coverage.html":{}}}],["src/app/common/company.ts:2",{"_index":286,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:3",{"_index":284,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:4",{"_index":290,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:5",{"_index":283,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:6",{"_index":288,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:7",{"_index":287,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:8",{"_index":285,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/company.ts:9",{"_index":289,"title":{},"body":{"classes/Company.html":{}}}],["src/app/common/mail.ts",{"_index":578,"title":{},"body":{"classes/Mail.html":{},"coverage.html":{}}}],["src/app/common/mail.ts:2",{"_index":582,"title":{},"body":{"classes/Mail.html":{}}}],["src/app/common/mail.ts:3",{"_index":583,"title":{},"body":{"classes/Mail.html":{}}}],["src/app/common/mail.ts:4",{"_index":584,"title":{},"body":{"classes/Mail.html":{}}}],["src/app/common/mail.ts:5",{"_index":585,"title":{},"body":{"classes/Mail.html":{}}}],["src/app/common/posting.ts",{"_index":660,"title":{},"body":{"classes/Posting.html":{},"coverage.html":{}}}],["src/app/common/posting.ts:10",{"_index":668,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:11",{"_index":667,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:12",{"_index":669,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:2",{"_index":665,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:3",{"_index":662,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:4",{"_index":664,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:5",{"_index":670,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:6",{"_index":672,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:7",{"_index":663,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:8",{"_index":671,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/common/posting.ts:9",{"_index":666,"title":{},"body":{"classes/Posting.html":{}}}],["src/app/form/form.component.ts",{"_index":310,"title":{},"body":{"components/FormComponent.html":{},"coverage.html":{}}}],["src/app/form/form.component.ts:119",{"_index":336,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:122",{"_index":339,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:18",{"_index":349,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:19",{"_index":347,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:20",{"_index":351,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:21",{"_index":342,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:22",{"_index":350,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:23",{"_index":344,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:25",{"_index":345,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:26",{"_index":333,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:37",{"_index":334,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:84",{"_index":353,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/form/form.component.ts:87",{"_index":341,"title":{},"body":{"components/FormComponent.html":{}}}],["src/app/job",{"_index":452,"title":{},"body":{"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts",{"_index":291,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/layout/footer/footer.component.ts:12",{"_index":299,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/footer/footer.component.ts:8",{"_index":298,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts",{"_index":611,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/layout/navbar/navbar.component.ts:14",{"_index":620,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:15",{"_index":619,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:16",{"_index":615,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:20",{"_index":618,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:30",{"_index":616,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/layout/navbar/navbar.component.ts:34",{"_index":617,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:15",{"_index":557,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:16",{"_index":558,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:17",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":555,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":559,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":556,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/my",{"_index":598,"title":{},"body":{"components/MyPostingsComponent.html":{},"coverage.html":{}}}],["src/app/not",{"_index":632,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/app/page",{"_index":642,"title":{},"body":{"components/PageHeaderComponent.html":{},"coverage.html":{}}}],["src/app/posting",{"_index":673,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts",{"_index":838,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/profile/profile.component.ts:129",{"_index":859,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:144",{"_index":855,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:149",{"_index":856,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:183",{"_index":857,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:19",{"_index":873,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:20",{"_index":864,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:21",{"_index":867,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:22",{"_index":872,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:23",{"_index":861,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:24",{"_index":862,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:25",{"_index":866,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:27",{"_index":868,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:28",{"_index":865,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:29",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:30",{"_index":863,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:31",{"_index":870,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:32",{"_index":869,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:33",{"_index":871,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:35",{"_index":854,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:46",{"_index":858,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/profile/profile.component.ts:68",{"_index":860,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/service/basic",{"_index":209,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/service/http/http",{"_index":433,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{},"coverage.html":{}}}],["src/app/service/mail.service.ts",{"_index":587,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/app/service/mail.service.ts:13",{"_index":593,"title":{},"body":{"injectables/MailService.html":{}}}],["src/app/service/mail.service.ts:9",{"_index":589,"title":{},"body":{"injectables/MailService.html":{}}}],["src/app/service/posting.service.ts",{"_index":795,"title":{},"body":{"injectables/PostingService.html":{},"coverage.html":{}}}],["src/app/service/posting.service.ts:12",{"_index":804,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:16",{"_index":823,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:20",{"_index":809,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:24",{"_index":819,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:28",{"_index":817,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:32",{"_index":815,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:36",{"_index":821,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:40",{"_index":810,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:44",{"_index":813,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:48",{"_index":811,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:52",{"_index":805,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/posting.service.ts:56",{"_index":807,"title":{},"body":{"injectables/PostingService.html":{}}}],["src/app/service/route",{"_index":934,"title":{},"body":{"injectables/RouteGuardService.html":{},"coverage.html":{}}}],["src/app/service/user.service",{"_index":622,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/service/user.service.ts",{"_index":964,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/user.service.ts:13",{"_index":972,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:17",{"_index":976,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:21",{"_index":970,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:25",{"_index":974,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:29",{"_index":978,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/user.service.ts:9",{"_index":968,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/sign",{"_index":944,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1003,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1042,"title":{"index.html":{}},"body":{}}],["state",{"_index":939,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["statements",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":403,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["stored",{"_index":1063,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/NavbarComponent.html":{},"classes/Posting.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["submitted",{"_index":319,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["subscribe",{"_index":411,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["successful",{"_index":573,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["support",{"_index":425,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{},"modules.html":{}}}],["surname",{"_index":282,"title":{},"body":{"classes/Company.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["svg",{"_index":1083,"title":{},"body":{"modules.html":{}}}],["swift",{"_index":381,"title":{},"body":{"components/FormComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingEditComponent.html":{}}}],["switch",{"_index":523,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["table",{"_index":1010,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1009,"title":{},"body":{"coverage.html":{}}}],["taginputmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks",{"_index":426,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["tempcategoryname",{"_index":741,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["tempcompanyname",{"_index":320,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["tempdata",{"_index":916,"title":{},"body":{"components/ProfileComponent.html":{}}}],["tempdescription",{"_index":742,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["templocalization",{"_index":743,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["tempmaxsalary",{"_index":744,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["tempminsalary",{"_index":745,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["temppositionname",{"_index":746,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["tempposting.localization",{"_index":538,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["tempposting.maxsalary",{"_index":541,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["tempposting.minsalary",{"_index":539,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["tempposting.positionname",{"_index":537,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["temprequirements",{"_index":747,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["temprequirementsarray",{"_index":467,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/PostingEditComponent.html":{}}}],["terms",{"_index":307,"title":{},"body":{"components/FooterComponent.html":{},"components/SignUpComponent.html":{}}}],["test",{"_index":1072,"title":{},"body":{"index.html":{}}}],["testarray",{"_index":468,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["tests",{"_index":1071,"title":{},"body":{"index.html":{}}}],["this.applyform",{"_index":697,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.applyform.controls",{"_index":706,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.applyform.invalid",{"_index":713,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.basicauthenticationservice.getauthenticatedtoken",{"_index":445,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["this.basicauthenticationservice.getauthenticateduser",{"_index":447,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["this.basicauthenticationservice.isuserloggedin",{"_index":628,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.basicauthenticationservice.login(this.f.email.value",{"_index":569,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.basicauthenticationservice.logout",{"_index":629,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.currentcategory",{"_index":521,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.currentlanguage",{"_index":517,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.currentlocalization",{"_index":514,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.dropdownlist",{"_index":376,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.dropdownsettings",{"_index":384,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.email",{"_index":626,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.emailvalue",{"_index":361,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.f.email.value",{"_index":716,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.f.firstandlastname.value",{"_index":717,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.f.introduction.value",{"_index":718,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.f.password.value",{"_index":570,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.f.pdffile.setvalue(this.filetoupload",{"_index":712,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.filetoupload",{"_index":707,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.filetoupload.name",{"_index":711,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.firstloaded",{"_index":501,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.firstname",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formbuilder.group",{"_index":368,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["this.getauthenticateduser",{"_index":251,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["this.getvalues",{"_index":696,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.handlepostinglist",{"_index":495,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.http.delete(`${api_url}/company/${email",{"_index":981,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.delete(`${api_url}/posting/delete/${id",{"_index":836,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/company/${email",{"_index":979,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(`${api_url}/postingcategories",{"_index":835,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings",{"_index":833,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/${id",{"_index":828,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/${id}/postingcategory",{"_index":832,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/search/findbyemail?email=${email",{"_index":834,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/search/findbylocalizationcontaining?localization=${localization",{"_index":829,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/search/findbypostingcategoryid?id=${categoryid",{"_index":831,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.get(`${api_url}/postings/search/findbyrequirementcontaining?requirement=${requirement",{"_index":830,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.post(`${api_url}/company/authenticate",{"_index":241,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["this.http.post(`${api_url}/company/create",{"_index":980,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${api_url}/email/send?to=${companyemail}&appliedemail=${appliedemail}&firsandlastname=${firstandlastname}&introduction=${introduction}&companyname=${companyname",{"_index":596,"title":{},"body":{"injectables/MailService.html":{}}}],["this.http.post(`${api_url}/posting/create",{"_index":827,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.http.put(`${api_url}/company/${email",{"_index":982,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${api_url}/company/${email}/photo",{"_index":983,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.put(`${api_url}/posting/${id",{"_index":837,"title":{},"body":{"injectables/PostingService.html":{}}}],["this.imgurl",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isuserloggedin",{"_index":623,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loading",{"_index":408,"title":{},"body":{"components/FormComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["this.loginform",{"_index":560,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls",{"_index":567,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.invalid",{"_index":568,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.mailservice.sendemail(formdata",{"_index":714,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.name",{"_index":625,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.password",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.password.length",{"_index":895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.phonenumber",{"_index":880,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.pic",{"_index":627,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.pics.push(data.pic",{"_index":497,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["this.posting",{"_index":700,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.posting.companyname",{"_index":719,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.posting.email",{"_index":715,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.posting.localization",{"_index":720,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.posting.positionname",{"_index":721,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.posting.postingcategory",{"_index":702,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.postingform",{"_index":367,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.postingform.controls",{"_index":399,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.postingform.controls['companyname'].setvalue(this.tempcompanyname",{"_index":400,"title":{},"body":{"components/FormComponent.html":{}}}],["this.postingform.invalid",{"_index":406,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.postingform.value",{"_index":780,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.postings",{"_index":498,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["this.postings[index].pic",{"_index":503,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{}}}],["this.postingservice.deleteposting(id).subscribe",{"_index":605,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["this.postingservice.editposting(id",{"_index":779,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.postingservice.get(id).subscribe(this.processresultforpostings",{"_index":699,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.postingservice.getall().subscribe(this.processresultforpostings",{"_index":532,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.postingservice.getallpostingsforcompany(email).subscribe(this.processresultforpostings",{"_index":604,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["this.postingservice.getallpostingsforcompany(this.email).subscribe",{"_index":915,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.postingservice.getbycategory(categoryid).subscribe(this.processresultforpostings",{"_index":531,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.postingservice.getbylanguage(this.currentlanguage).subscribe(this.processresultforpostings",{"_index":519,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.postingservice.getbylocalization(this.currentlocalization).subscribe(this.processresultforpostings",{"_index":516,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.postingservice.getcategory(id).subscribe",{"_index":701,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.postingservice.postjob(this.postingform.value",{"_index":409,"title":{},"body":{"components/FormComponent.html":{}}}],["this.registerform",{"_index":955,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.registerform.controls",{"_index":956,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.registerform.invalid",{"_index":958,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.requirements",{"_index":418,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.returnurl",{"_index":565,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.parammap.subscribe",{"_index":494,"title":{},"body":{"components/JobPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.route.snapshot.parammap.get('category",{"_index":522,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":698,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.route.snapshot.parammap.get('localization",{"_index":515,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.parammap.get('requirement",{"_index":518,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.parammap.has('category",{"_index":513,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.parammap.has('localization",{"_index":510,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.parammap.has('requirement",{"_index":512,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":566,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigate([\"/board",{"_index":919,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.router.navigate(['/board",{"_index":415,"title":{},"body":{"components/FormComponent.html":{},"components/PostingDetailsComponent.html":{}}}],["this.router.navigate(['/login",{"_index":630,"title":{},"body":{"components/NavbarComponent.html":{},"components/SignUpComponent.html":{}}}],["this.router.navigate(['/my",{"_index":782,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.router.navigate(['login",{"_index":943,"title":{},"body":{"injectables/RouteGuardService.html":{}}}],["this.router.navigate([this.returnurl",{"_index":571,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.selectedfile",{"_index":888,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.selectedfile.name",{"_index":889,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.spinner.hide",{"_index":393,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["this.spinner.show",{"_index":360,"title":{},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["this.submitted",{"_index":401,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["this.surname",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.tempcategoryname",{"_index":773,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.tempcompanyname",{"_index":363,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.tempdescription",{"_index":776,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.templocalization",{"_index":775,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.tempmaxsalary",{"_index":778,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.tempminsalary",{"_index":777,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.temppositionname",{"_index":772,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.temprequirements",{"_index":786,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.temprequirementsarray",{"_index":774,"title":{},"body":{"components/PostingEditComponent.html":{}}}],["this.toastr.error(\"error",{"_index":609,"title":{},"body":{"components/MyPostingsComponent.html":{},"components/ProfileComponent.html":{}}}],["this.toastr.error('form",{"_index":891,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.error('nice",{"_index":893,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.error('update",{"_index":900,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.error(error",{"_index":417,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["this.toastr.success(\"account",{"_index":920,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.success(\"posting",{"_index":606,"title":{},"body":{"components/MyPostingsComponent.html":{}}}],["this.toastr.success('job",{"_index":413,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.toastr.success('login",{"_index":572,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.toastr.success('registration",{"_index":960,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.toastr.success('success",{"_index":722,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["this.toastr.success('update",{"_index":898,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.toastr.warning('form",{"_index":407,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/SignUpComponent.html":{}}}],["this.toastr.warning('update",{"_index":899,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateform",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateform.controls['email'].value",{"_index":892,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateform.invalid",{"_index":890,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.delete(this.email).subscribe",{"_index":914,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.userservice.get(sessionstorage.getitem(authenticated_user)).subscribe(data",{"_index":624,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.userservice.get(this.emailvalue).subscribe(data",{"_index":362,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["this.userservice.register(this.registerform.value",{"_index":959,"title":{},"body":{"components/SignUpComponent.html":{}}}],["this.userservice.updatephoto(this.email",{"_index":896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["time",{"_index":725,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["toastr",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":332,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["token",{"_index":224,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["true",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":894,"title":{},"body":{"components/ProfileComponent.html":{}}}],["tslib",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":562,"title":{},"body":{"components/LoginComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"classes/Category.html":{},"classes/Company.html":{},"components/FormComponent.html":{},"injectables/HttpIntercepterBasicAuthService.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"classes/Mail.html":{},"injectables/MailService.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"classes/Posting.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"injectables/PostingService.html":{},"components/ProfileComponent.html":{},"injectables/RouteGuardService.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":904,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":1070,"title":{},"body":{"index.html":{}}}],["unselectalltext",{"_index":388,"title":{},"body":{"components/FormComponent.html":{},"components/PostingEditComponent.html":{}}}],["up",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["up.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["up.component.css",{"_index":946,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.html",{"_index":947,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts",{"_index":945,"title":{},"body":{"components/SignUpComponent.html":{},"coverage.html":{}}}],["up.component.ts:15",{"_index":953,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:16",{"_index":952,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:17",{"_index":949,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:26",{"_index":950,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:38",{"_index":954,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up.component.ts:40",{"_index":951,"title":{},"body":{"components/SignUpComponent.html":{}}}],["up/sign",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SignUpComponent.html":{},"coverage.html":{}}}],["updateform",{"_index":848,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatephoto",{"_index":967,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto(email",{"_index":977,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":852,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updating",{"_index":921,"title":{},"body":{"components/ProfileComponent.html":{}}}],["upload",{"_index":732,"title":{},"body":{"components/PostingDetailsComponent.html":{},"components/ProfileComponent.html":{}}}],["uploaddata",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uploaddata).subscribe",{"_index":897,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uploaddata.append('newcompany",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{}}}],["url",{"_index":561,"title":{},"body":{"components/LoginComponent.html":{},"components/NotFoundComponent.html":{}}}],["use",{"_index":1059,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":254,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["username",{"_index":446,"title":{},"body":{"injectables/HttpIntercepterBasicAuthService.html":{}}}],["userservice",{"_index":329,"title":{"injectables/UserService.html":{}},"body":{"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["validators",{"_index":354,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["validators.minlength(6",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validators.required",{"_index":370,"title":{},"body":{"components/FormComponent.html":{},"components/LoginComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/FormComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["variable",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1090,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1047,"title":{},"body":{"index.html":{}}}],["via",{"_index":1074,"title":{},"body":{"index.html":{}}}],["void",{"_index":269,"title":{},"body":{"injectables/BasicAuthenticationService.html":{},"components/FooterComponent.html":{},"components/FormComponent.html":{},"components/JobBoardComponent.html":{},"components/JobPostingsComponent.html":{},"components/LoginComponent.html":{},"components/MyPostingsComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PageHeaderComponent.html":{},"components/PostingDetailsComponent.html":{},"components/PostingEditComponent.html":{},"components/ProfileComponent.html":{},"components/SignUpComponent.html":{}}}],["warszawa",{"_index":654,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["window.btoa(email",{"_index":237,"title":{},"body":{"classes/AuthenticationBean.html":{},"injectables/BasicAuthenticationService.html":{}}}],["window.location.reload",{"_index":608,"title":{},"body":{"components/MyPostingsComponent.html":{},"components/ProfileComponent.html":{}}}],["wrocław",{"_index":655,"title":{},"body":{"components/PageHeaderComponent.html":{}}}],["yourself",{"_index":731,"title":{},"body":{"components/PostingDetailsComponent.html":{}}}],["z",{"_index":540,"title":{},"body":{"components/JobPostingsComponent.html":{}}}],["zone.js",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'JoinIT-UI'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'JoinIT-UI';\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nAppModule -->\n\nFormComponent->AppModule\n\n\n\n\n\nJobBoardComponent\n\nJobBoardComponent\n\nAppModule -->\n\nJobBoardComponent->AppModule\n\n\n\n\n\nJobPostingsComponent\n\nJobPostingsComponent\n\nAppModule -->\n\nJobPostingsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyPostingsComponent\n\nMyPostingsComponent\n\nAppModule -->\n\nMyPostingsComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPageHeaderComponent\n\nPageHeaderComponent\n\nAppModule -->\n\nPageHeaderComponent->AppModule\n\n\n\n\n\nPostingDetailsComponent\n\nPostingDetailsComponent\n\nAppModule -->\n\nPostingDetailsComponent->AppModule\n\n\n\n\n\nPostingEditComponent\n\nPostingEditComponent\n\nAppModule -->\n\nPostingEditComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpIntercepterBasicAuthService\n\nHttpIntercepterBasicAuthService\n\nAppModule -->\n\nHttpIntercepterBasicAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            JobBoardComponent\n                        \n                        \n                            JobPostingsComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            MyPostingsComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            NotFoundComponent\n                        \n                        \n                            PageHeaderComponent\n                        \n                        \n                            PostingDetailsComponent\n                        \n                        \n                            PostingEditComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            SignUpComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HttpIntercepterBasicAuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FeatherModule } from 'angular-feather';\nimport { allIcons } from 'angular-feather/icons';\nimport { TagInputModule } from 'ngx-chips';\nimport { AppRoutingModule } from './app-routing';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './layout/navbar/navbar.component';\nimport { FooterComponent } from './layout/footer/footer.component';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { JobPostingsComponent } from './job-postings/job-postings.component';\nimport { PostingDetailsComponent } from './posting-details/posting-details.component';\nimport { JobBoardComponent } from './job-board/job-board.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FormComponent } from './form/form.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpIntercepterBasicAuthService } from './service/http/http-intercepter-basic-auth.service'\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { MyPostingsComponent } from './my-postings/my-postings.component';\nimport { PostingEditComponent } from './posting-edit/posting-edit.component';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    PageHeaderComponent,\n    JobPostingsComponent,\n    PostingDetailsComponent,\n    JobBoardComponent,\n    LoginComponent,\n    SignUpComponent,\n    ProfileComponent,\n    FormComponent,\n    NotFoundComponent,\n    MyPostingsComponent,\n    PostingEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    TagInputModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialFileInputModule,\n    MatIconModule,\n    MatFormFieldModule,\n    FeatherModule.pick(allIcons),\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    NgMultiSelectDropDownModule.forRoot(),\n    NgxSpinnerModule,\n  ],\n  exports: [\n    FeatherModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpIntercepterBasicAuthService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormComponent } from './form/form.component';\nimport { JobBoardComponent } from './job-board/job-board.component';\nimport { LoginComponent } from './login/login.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { PostingDetailsComponent } from './posting-details/posting-details.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { RouteGuardService } from './service/route-guard.service'\nimport { MyPostingsComponent } from './my-postings/my-postings.component';\nimport { PostingEditComponent } from './posting-edit/posting-edit.component';\n\n\nconst routes: Routes = [\n  {\n    path: \"posting-details/:id\",\n    component: PostingDetailsComponent\n  },\n  {\n    path: \"board\",\n    component: JobBoardComponent\n  },\n  {\n    path: \"board/localization/:localization\",\n    component: JobBoardComponent\n  },\n  {\n    path: \"board/category/:category\",\n    component: JobBoardComponent\n  },\n  {\n    path: \"board/language/:requirement\",\n    component: JobBoardComponent\n  },\n  {\n    path: \"form\",\n    component: FormComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: \"profile\",\n    component: ProfileComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: \"my-postings\",\n    component: MyPostingsComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: \"my-postings/:id\",\n    component: PostingEditComponent,\n    canActivate: [RouteGuardService]\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n  },\n  {\n    path: \"sign-up\",\n    component: SignUpComponent\n  },\n  {\n    path: \"404\",\n    component: NotFoundComponent\n  },\n  {\n    path: \"\",\n    redirectTo: \"/board\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"**\",\n    redirectTo: \"404\"\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthenticationBean.html":{"url":"classes/AuthenticationBean.html","title":"class - AuthenticationBean","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthenticationBean\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/basic-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/basic-authentication.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/service/basic-authentication.service.ts:54\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, AUTHENTICATED_USER, TOKEN } from '../app.constants';\nimport { map } from 'rxjs/operators';\nimport { Company } from '../common/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  login(email, password) {\n    let basicAuthHeaderString = 'Basic ' + window.btoa(email + ':' + password)\n\n    let headers = new HttpHeaders({\n      Authorization: basicAuthHeaderString\n    })\n\n    return this.http.post(`${API_URL}/company/authenticate`, { email, password })\n      .pipe(map(data => {\n        if (password === data.password) {\n          sessionStorage.setItem(AUTHENTICATED_USER, data.email);\n          sessionStorage.setItem(TOKEN, basicAuthHeaderString);\n        }\n      }))\n\n  }\n\n  getAuthenticatedUser() {\n    return sessionStorage.getItem(AUTHENTICATED_USER)\n  }\n\n  getAuthenticatedToken() {\n    if (this.getAuthenticatedUser()) {\n      return sessionStorage.getItem(TOKEN)\n    }\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(AUTHENTICATED_USER);\n    return !(user === null)\n  }\n\n  logout() {\n    sessionStorage.removeItem(AUTHENTICATED_USER);\n    sessionStorage.removeItem(TOKEN);\n  }\n\n}\n\nexport class AuthenticationBean {\n  constructor(public message: string) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BasicAuthenticationService.html":{"url":"injectables/BasicAuthenticationService.html","title":"injectable - BasicAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BasicAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/basic-authentication.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthenticatedToken\n                            \n                            \n                                getAuthenticatedUser\n                            \n                            \n                                isUserLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/basic-authentication.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthenticatedToken\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthenticatedToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-authentication.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAuthenticatedUser\n                        \n                        \n                    \n                \n            \n            \n                \ngetAuthenticatedUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-authentication.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nisUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-authentication.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(email, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-authentication.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/basic-authentication.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { API_URL, AUTHENTICATED_USER, TOKEN } from '../app.constants';\nimport { map } from 'rxjs/operators';\nimport { Company } from '../common/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  login(email, password) {\n    let basicAuthHeaderString = 'Basic ' + window.btoa(email + ':' + password)\n\n    let headers = new HttpHeaders({\n      Authorization: basicAuthHeaderString\n    })\n\n    return this.http.post(`${API_URL}/company/authenticate`, { email, password })\n      .pipe(map(data => {\n        if (password === data.password) {\n          sessionStorage.setItem(AUTHENTICATED_USER, data.email);\n          sessionStorage.setItem(TOKEN, basicAuthHeaderString);\n        }\n      }))\n\n  }\n\n  getAuthenticatedUser() {\n    return sessionStorage.getItem(AUTHENTICATED_USER)\n  }\n\n  getAuthenticatedToken() {\n    if (this.getAuthenticatedUser()) {\n      return sessionStorage.getItem(TOKEN)\n    }\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(AUTHENTICATED_USER);\n    return !(user === null)\n  }\n\n  logout() {\n    sessionStorage.removeItem(AUTHENTICATED_USER);\n    sessionStorage.removeItem(TOKEN);\n  }\n\n}\n\nexport class AuthenticationBean {\n  constructor(public message: string) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/category.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryName\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/category.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/category.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Category {\n    id: number;\n    categoryName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/company.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                imageType\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                pic\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/company.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Company {\n    name: string;\n    firstName: string;\n    surname: string;\n    email: string;\n    phoneNumber: number;\n    password: string;\n    imageType: string;\n    pic: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/footer/footer.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/footer/footer.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/footer/footer.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            Copyright &copy; Join IT 2021\n            \n                Privacy Policy\n                &middot;\n                Terms &amp; Conditions\n            \n        \n    \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Copyright © Join IT 2021                            Privacy Policy                ·                Terms & Conditions                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormComponent.html":{"url":"components/FormComponent.html","title":"component - FormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/form/form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-form\n            \n\n            \n                styleUrls\n                ./form.component.css\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dropdownList\n                            \n                            \n                                dropdownSettings\n                            \n                            \n                                emailValue\n                            \n                            \n                                loading\n                            \n                            \n                                postingForm\n                            \n                            \n                                requirements\n                            \n                            \n                                submitted\n                            \n                            \n                                tempCompanyName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onItemSelect\n                            \n                            \n                                onSelectAll\n                            \n                            \n                                postJob\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService, postingService: PostingService, spinner: NgxSpinnerService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/form/form.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form/form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onItemSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonItemSelect(item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form/form.component.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectAll\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectAll(items: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/form/form.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postJob\n                        \n                        \n                    \n                \n            \n            \n                \npostJob()\n                \n            \n\n\n            \n                \n                    Defined in src/app/form/form.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postingForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempCompanyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/form/form.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/form/form.component.ts:84\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { UserService } from '../service/user.service';\nimport { PostingService } from '../service/posting.service';\nimport { AUTHENTICATED_USER } from '../app.constants';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n  postingForm: FormGroup\n  loading = false;\n  submitted = false;\n  dropdownList = [];\n  requirements = [];\n  dropdownSettings = {};\n\n  emailValue: string;\n  tempCompanyName: string = \"\";\n\n\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private postingService: PostingService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n\n    this.emailValue = sessionStorage.getItem(AUTHENTICATED_USER);\n\n\n    this.userService.get(this.emailValue).subscribe(data => {\n\n      this.tempCompanyName = data.name;\n      console.log(data);\n      console.log(this.tempCompanyName)\n    });\n\n    this.postingForm = this.formBuilder.group({\n      companyName: ['', Validators.required],\n      email: [this.emailValue, Validators.required],\n      positionName: ['', Validators.required],\n      category: ['', Validators.required],\n      requirements: ['', Validators.required],\n      localization: ['', Validators.required],\n      description: ['', Validators.required],\n      minSalary: ['', Validators.required],\n      maxSalary: ['', Validators.required]\n    });\n\n    this.dropdownList = [\n      'Java',\n      'C#',\n      'JavaScript',\n      'Python',\n      'Swift',\n      'Kotlin',\n      'C++',\n      'PHP'\n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      selectAllText: 'Select All',\n      unSelectAllText: 'Deselect All',\n      itemsShowLimit: 7,\n      allowSearchFilter: true\n    };\n\n    this.spinner.hide();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.postingForm.controls; }\n\n\n  postJob() {\n\n    this.postingForm.controls['companyName'].setValue(this.tempCompanyName)\n\n    this.spinner.show();\n    this.submitted = true;\n\n    //console.log(this.postingForm.value)\n\n    // // stop here if form is invalid\n    if (this.postingForm.invalid) {\n      this.toastr.warning('Form is invalid!');\n      this.spinner.hide();\n    }\n    else {\n\n      this.loading = true;\n      this.postingService.postJob(this.postingForm.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.spinner.hide();\n            this.toastr.success('Job posting made');\n            this.router.navigate(['/board']);\n          },\n          error => {\n            this.toastr.error(error);\n            this.spinner.hide();\n          });\n    }\n  }\n\n  onItemSelect(item: any) {\n    this.requirements = item;\n  }\n  onSelectAll(items: any) {\n    this.requirements = items;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n         Opening form... \n    \n    \n        \n        \n            \n                Job posting\n            \n            \n            \n                \n                \n                    \n                    \n                        Company Name\n                        \n                    \n                    \n                    \n                        Email\n                        \n                    \n                    \n                    \n                    \n                        Job title\n                        \n                    \n                    \n                    \n                        Category\n                        \n                            Backend\n                            Frontend\n                            Fullstack\n                            DevOps\n                            Analyst\n                            Support\n                        \n                    \n                    \n                    \n                        Requirements\n                        \n                        \n                    \n                    \n                    \n                        Localization\n                        \n                    \n                    \n                    \n                        Job description (Tasks, responsibilities, etc.)\n                        \n                    \n                    \n                    \n                        Minimum salary\n                        \n                    \n                    \n                    \n                        Maximum salary\n                        \n                    \n                    \n                    \n                        Post a job\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./form.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Opening form...                                                     Job posting                                                                                                                                    Company Name                                                                                                            Email                                                                                                                                Job title                                                                                                            Category                                                    Backend                            Frontend                            Fullstack                            DevOps                            Analyst                            Support                                                                                                            Requirements                                                                                                                                    Localization                                                                                                            Job description (Tasks, responsibilities, etc.)                                                                                                            Minimum salary                                                                                                            Maximum salary                                                                                                            Post a job                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpIntercepterBasicAuthService.html":{"url":"injectables/HttpIntercepterBasicAuthService.html","title":"injectable - HttpIntercepterBasicAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpIntercepterBasicAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/http/http-intercepter-basic-auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(basicAuthenticationService: BasicAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/http/http-intercepter-basic-auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        basicAuthenticationService\n                                                  \n                                                        \n                                                                        BasicAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/http/http-intercepter-basic-auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BasicAuthenticationService } from '../basic-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpIntercepterBasicAuthService {\n\n  constructor(private basicAuthenticationService: BasicAuthenticationService) { }\n\n  intercept(request: HttpRequest, next: HttpHandler){\n    let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\n    let username = this.basicAuthenticationService.getAuthenticatedUser();\n\n    if(basicAuthHeaderString && username){\n      request = request.clone({\n        setHeaders : {\n          Authorization : basicAuthHeaderString\n        }\n      })\n    }\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JobBoardComponent.html":{"url":"components/JobBoardComponent.html","title":"component - JobBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JobBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/job-board/job-board.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-job-board\n            \n\n            \n                styleUrls\n                ./job-board.component.css\n            \n\n\n\n            \n                templateUrl\n                ./job-board.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/job-board/job-board.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/job-board/job-board.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-job-board',\n  templateUrl: './job-board.component.html',\n  styleUrls: ['./job-board.component.css']\n})\nexport class JobBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./job-board.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JobBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JobPostingsComponent.html":{"url":"components/JobPostingsComponent.html","title":"component - JobPostingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  JobPostingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/job-postings/job-postings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-job-postings\n            \n\n            \n                styleUrls\n                ./job-postings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./job-postings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentCategory\n                            \n                            \n                                currentLanguage\n                            \n                            \n                                currentLocalization\n                            \n                            \n                                firstLoaded\n                            \n                            \n                                pics\n                            \n                            \n                                postings\n                            \n                            \n                                refreshed\n                            \n                            \n                                tempRequirementsArray\n                            \n                            \n                                testArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPictures\n                            \n                            \n                                handlePostingList\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processResultForPostings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postingService: PostingService, spinner: NgxSpinnerService, userService: UserService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/job-postings/job-postings.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPictures\n                        \n                        \n                    \n                \n            \n            \n                \ngetPictures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/job-postings/job-postings.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handlePostingList\n                        \n                        \n                    \n                \n            \n            \n                \nhandlePostingList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/job-postings/job-postings.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/job-postings/job-postings.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processResultForPostings\n                        \n                        \n                    \n                \n            \n            \n                \nprocessResultForPostings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/job-postings/job-postings.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (data: any) => void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentLocalization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Posting[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempRequirementsArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            testArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/job-postings/job-postings.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Posting } from '../common/posting';\nimport { PostingService } from '../service/posting.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-job-postings',\n  templateUrl: './job-postings.component.html',\n  styleUrls: ['./job-postings.component.css']\n})\nexport class JobPostingsComponent implements OnInit {\n  postings: Posting[] = [];\n  pics: any[] = [];\n  tempRequirementsArray: any[] = [];\n  testArray: any[] = [];\n  firstLoaded: Promise\n  refreshed = false;\n\n  currentLocalization: string;\n  currentLanguage: string;\n  currentCategory: string;\n\n\n  constructor(private postingService: PostingService,\n    private spinner: NgxSpinnerService,\n    private userService: UserService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    if (!localStorage.getItem('foo')) {\n      localStorage.setItem('foo', 'no reload')\n      location.reload()\n    } else {\n      localStorage.removeItem('foo')\n    }\n\n\n    this.route.paramMap.subscribe(() => {\n      this.handlePostingList();\n    });\n\n  }\n\n  getPictures() {\n    for (let index = 0; index  {\n        this.pics.push(data.pic)\n      });\n    }\n  }\n\n  processResultForPostings() {\n    this.spinner.show();\n\n    return data => {\n      this.postings = data._embedded.postings;\n\n      console.log(this.postings)\n\n      this.firstLoaded = Promise.resolve(true);\n\n      for (let index = 0; index  {\n          this.postings[index].pic = data.pic;\n        })\n      }\n\n      setTimeout(() => {\n        /** spinner ends after 1 seconds */\n        this.spinner.hide();\n      }, 1000);\n    }\n  }\n\n  handlePostingList() {\n    const localization: boolean = this.route.snapshot.paramMap.has('localization');\n    const requirement: boolean = this.route.snapshot.paramMap.has('requirement');\n    const category: boolean = this.route.snapshot.paramMap.has('category');\n\n    if (localization) {\n      this.currentLocalization = this.route.snapshot.paramMap.get('localization');\n      this.postingService.getByLocalization(this.currentLocalization).subscribe(this.processResultForPostings());\n    }\n    else if (requirement) {\n      this.currentLanguage = this.route.snapshot.paramMap.get('requirement');\n      this.postingService.getByLanguage(this.currentLanguage).subscribe(this.processResultForPostings());\n    }\n    else if (category) {\n      let categoryId;\n      this.currentCategory = this.route.snapshot.paramMap.get('category');\n\n      switch (this.currentCategory) {\n        case \"Backend\": {\n          categoryId = 1; break;\n        }\n        case \"Frontend\": {\n          categoryId = 2; break;\n        }\n        case \"Fullstack\": {\n          categoryId = 3; break;\n        }\n        case \"DevOps\": {\n          categoryId = 4; break;\n        }\n        case \"Analyst\": {\n          categoryId = 5; break;\n        }\n        case \"Support\": {\n          categoryId = 6; break;\n        }\n      }\n      this.postingService.getByCategory(categoryId).subscribe(this.processResultForPostings());\n    }\n    else {\n      this.postingService.getAll().subscribe(this.processResultForPostings())\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n            \n                 Opening connection to our database... \n            \n        \n         0\">\n            \n                \n                    Job offers\n                    {{ postings.length }} Postings\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                                \n                                    {{ tempPosting.positionName }}\n                                    {{ tempPosting.localization }}\n                                \n                            \n                        \n                        \n                            {{ requirement\n                                }}\n                        \n                        \n                            \n                                {{ tempPosting.minSalary }} zł - {{ tempPosting.maxSalary }} zł\n                            \n                        \n                    \n                \n            \n        \n        \n            \n            \n                No current open positions for your search\n                \n                    Go back to all job postings\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./job-postings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         Opening connection to our database...                              0\">                                                Job offers                    {{ postings.length }} Postings                                                                                                                                                                                                                                                                                                                                                                        {{ tempPosting.positionName }}                                    {{ tempPosting.localization }}                                                                                                                                        {{ requirement                                }}                                                                                                            {{ tempPosting.minSalary }} zł - {{ tempPosting.maxSalary }} zł                                                                                                                                                            No current open positions for your search                                    Go back to all job postings                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JobPostingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                returnUrl\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, route: ActivatedRoute, router: Router, basicAuthenticationService: BasicAuthenticationService, spinner: NgxSpinnerService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basicAuthenticationService\n                                                  \n                                                        \n                                                                        BasicAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            returnUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/login/login.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { BasicAuthenticationService } from 'src/app/service/basic-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private basicAuthenticationService: BasicAuthenticationService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/board';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.spinner.show();\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      this.toastr.warning('Form is invalid!');\n    }\n    else {\n      this.basicAuthenticationService.login(this.f.email.value, this.f.password.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.router.navigate([this.returnUrl]);\n            this.toastr.success('Login successful');\n            this.spinner.hide();\n          },\n          error => {\n            this.toastr.error(error);\n            this.spinner.hide();\n          });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n             Opening connection to our database... \n        \n    \n    \n        \n            \n        \n        \n            \n            \n                \n                    Sign In\n                \n                \n                \n                    \n                    \n                        \n                        \n                            Email address\n                            \n                        \n                        \n                        \n                            Password\n                            \n                        \n                        \n                        \n                        \n                            Login\n                        \n                    \n                \n                \n                \n                    \n                        New user?\n                        Create an account!\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Opening connection to our database...                                                                                                                 Sign In                                                                                                                                                                    Email address                                                                                                                                Password                                                                                                                                                        Login                                                                                                                                        New user?                        Create an account!                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Mail.html":{"url":"classes/Mail.html","title":"class - Mail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Mail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/mail.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstAndLastName\n                            \n                            \n                                introduction\n                            \n                            \n                                pdfFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/mail.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstAndLastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/mail.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            introduction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/mail.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pdfFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/mail.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Mail {\n    email: string;\n    firstAndLastName: string;\n    introduction: string\n    pdfFile: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendEmail\n                        \n                        \n                    \n                \n            \n            \n                \nsendEmail(pdf: any, companyEmail: string, appliedEmail: string, firstAndLastName: string, introduction: string, companyName: string, localization: string, positionName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/mail.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pdf\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    appliedEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstAndLastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    introduction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    companyName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    localization\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    positionName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { API_URL } from '../app.constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Mail } from '../common/mail';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MailService {\n\n  constructor(private http: HttpClient) { }\n\n  sendEmail(pdf: any, companyEmail: string, appliedEmail: string, firstAndLastName: string, introduction: string, companyName: string, localization: string, positionName: string) {\n    return this.http.post(`${API_URL}/email/send?to=${companyEmail}&appliedEmail=${appliedEmail}&firsAndLastName=${firstAndLastName}&introduction=${introduction}&companyName=${companyName}\n    &localization=${localization}&positionName=${positionName}`, pdf);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyPostingsComponent.html":{"url":"components/MyPostingsComponent.html","title":"component - MyPostingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MyPostingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/my-postings/my-postings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-postings\n            \n\n            \n                styleUrls\n                ./my-postings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./my-postings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pics\n                            \n                            \n                                postings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePosting\n                            \n                            \n                                getPictures\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processResultForPostings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postingService: PostingService, spinner: NgxSpinnerService, userService: UserService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/my-postings/my-postings.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePosting\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePosting(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-postings/my-postings.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPictures\n                        \n                        \n                    \n                \n            \n            \n                \ngetPictures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-postings/my-postings.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-postings/my-postings.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processResultForPostings\n                        \n                        \n                    \n                \n            \n            \n                \nprocessResultForPostings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/my-postings/my-postings.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (data: any) => void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pics\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-postings/my-postings.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Posting[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/my-postings/my-postings.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { AUTHENTICATED_USER } from '../app.constants';\nimport { Posting } from '../common/posting';\nimport { PostingService } from '../service/posting.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-my-postings',\n  templateUrl: './my-postings.component.html',\n  styleUrls: ['./my-postings.component.css']\n})\nexport class MyPostingsComponent implements OnInit {\n\n  postings: Posting[] = [];\n  pics: any[] = [];\n\n  constructor(private postingService: PostingService,\n    private spinner: NgxSpinnerService,\n    private userService: UserService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    const email = sessionStorage.getItem(AUTHENTICATED_USER);\n    this.postingService.getAllPostingsForCompany(email).subscribe(this.processResultForPostings())\n  }\n\n  getPictures() {\n    for (let index = 0; index  {\n        this.pics.push(data.pic)\n      });\n    }\n  }\n\n  processResultForPostings() {\n    this.spinner.show();\n\n    return data => {\n      this.postings = data._embedded.postings;\n\n      for (let index = 0; index  {\n          this.postings[index].pic = data.pic;\n        })\n      }\n\n      console.log(this.postings)\n      this.spinner.hide();\n    }\n  }\n\n  deletePosting(id: number) {\n    this.spinner.show();\n    this.postingService.deletePosting(id).subscribe(\n      data => {\n        this.toastr.success(\"Posting deleted\")\n        setTimeout(() => {\n          /** spinner ends after 2 seconds */\n          window.location.reload();\n          this.spinner.hide();\n        }, 1000);\n      },\n      error => {\n        this.toastr.error(\"Error ocurred!\");\n        this.spinner.hide();\n      }\n    )\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                 Opening connection to our database... \n            \n        \n        \n            \n                \n                    Your Postings\n                    {{ postings.length }}\n                        Postings\n                    \n                \n                \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                                \n                                    {{ tempPosting.positionName }}\n                                    {{ tempPosting.localization }}\n                                \n                            \n                        \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./my-postings.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         Opening connection to our database...                                                                             Your Postings                    {{ postings.length }}                        Postings                                                                                                                                                                                                                                                                                                                                                                        {{ tempPosting.positionName }}                                    {{ tempPosting.localization }}                                                                                                                                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyPostingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/navbar/navbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                pic\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                IsUserLoggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(basicAuthenticationService: BasicAuthenticationService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/navbar/navbar.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        basicAuthenticationService\n                                                  \n                                                        \n                                                                        BasicAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            IsUserLoggedIn\n                        \n                        \n                    \n                \n            \n            \n                \nIsUserLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/navbar/navbar.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/navbar/navbar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/layout/navbar/navbar.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/navbar/navbar.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/navbar/navbar.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/navbar/navbar.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AUTHENTICATED_USER } from 'src/app/app.constants';\nimport { BasicAuthenticationService } from 'src/app/service/basic-authentication.service';\nimport { UserService } from 'src/app/service/user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  name: string = \"\";\n  email: string = \"\";\n  pic: any;\n\n  constructor(private basicAuthenticationService: BasicAuthenticationService, private router: Router, private userService: UserService) { }\n\n  ngOnInit(): void {\n    if (this.IsUserLoggedIn) {\n      this.userService.get(sessionStorage.getItem(AUTHENTICATED_USER)).subscribe(data => {\n        this.name = data.name;\n        this.email = data.email;\n        this.pic = data.pic;\n      });\n    }\n  }\n\n  IsUserLoggedIn() {\n    return this.basicAuthenticationService.isUserLoggedIn();\n  }\n\n  logout() {\n    this.basicAuthenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        JoinIT\n            \n        \n        \n            \n                Post\n                    your job offer!\n                Post\n                    your job offer!\n                \n                \n                    \n                        \n                    \n                        \n                            \n                            \n                            \n                                {{ name }}\n                                {{ email }}\n                            \n                        \n                        \n                        \n                            \n                                \n                                \n                            \n                            Account\n                        \n                        \n                            \n                                \n                                \n                            \n                            My Postings\n                        \n                        \n                        \n                            \n                                \n                                \n                            \n                            Logout\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            JoinIT                                                        Post                    your job offer!                Post                    your job offer!                                                                                                                                                                                                                                            {{ name }}                                {{ email }}                                                                                                                                                                                                                                                        Account                                                                                                                                                                                                    My Postings                                                                                                                                                                                                                            Logout                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/not-found/not-found.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                styleUrls\n                ./not-found.component.css\n            \n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/not-found/not-found.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/not-found/not-found.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                    This requested URL was not found on this server.\n                    Return Home\n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./not-found.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                This requested URL was not found on this server.                    Return Home                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageHeaderComponent.html":{"url":"components/PageHeaderComponent.html","title":"component - PageHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/page-header/page-header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-header\n            \n\n            \n                styleUrls\n                ./page-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./page-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/page-header/page-header.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/page-header/page-header.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    Open positions\n                    Join us in helping create better experiences for our customers\n                \n            \n        \n        \n            \n                \n                \n                    \n                        \n                            Backend\n                        \n                    \n                    \n                        \n                            Frontend\n                        \n                    \n                    \n                        \n                            Fullstack\n                        \n                    \n                    \n                        \n                            DevOps\n                        \n                    \n                    \n                        \n                            Analyst\n                        \n                    \n                    \n                        \n                            Support\n                        \n                    \n                \n            \n            \n                \n                \n                    \n                        \n                            C#\n                        \n                    \n                    \n                        \n                            JavaScript\n                        \n                    \n                    \n                        \n                            Java\n                        \n                    \n                    \n                        \n                            Python\n                        \n                    \n                    \n                        \n                            C++\n                        \n                    \n                    \n                        \n                            PHP\n                        \n                    \n                    \n                        \n                            Swift\n                        \n                    \n                    \n                        \n                            Kotlin\n                        \n                    \n                \n            \n            \n                \n                \n                    \n                        \n                            Gdańsk\n                        \n                    \n                    \n                        \n                            Warszawa\n                        \n                    \n                    \n                        \n                            Wrocław\n                        \n                    \n                    \n                        \n                            Kraków\n                        \n                    \n                    \n                        \n                            Poznań\n                        \n                    \n                    \n                        \n                            Łódź\n                        \n                    \n                    \n                        \n                            Remote\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./page-header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Open positions                    Join us in helping create better experiences for our customers                                                                                                                                                                Backend                                                                                                                    Frontend                                                                                                                    Fullstack                                                                                                                    DevOps                                                                                                                    Analyst                                                                                                                    Support                                                                                                                                                                                            C#                                                                                                                    JavaScript                                                                                                                    Java                                                                                                                    Python                                                                                                                    C++                                                                                                                    PHP                                                                                                                    Swift                                                                                                                    Kotlin                                                                                                                                                                                            Gdańsk                                                                                                                    Warszawa                                                                                                                    Wrocław                                                                                                                    Kraków                                                                                                                    Poznań                                                                                                                    Łódź                                                                                                                    Remote                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Posting.html":{"url":"classes/Posting.html","title":"class - Posting","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Posting\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/common/posting.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                companyName\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                localization\n                            \n                            \n                                maxSalary\n                            \n                            \n                                minSalary\n                            \n                            \n                                pic\n                            \n                            \n                                positionName\n                            \n                            \n                                postingCategory\n                            \n                            \n                                requirements\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxSalary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minSalary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postingCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/common/posting.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Posting {\n    id: number;\n    companyName: string;\n    email: string;\n    positionName: string;\n    requirements: string;\n    description: string;\n    postingCategory: any;\n    localization: string;\n    minSalary: number;\n    maxSalary: number;\n    pic: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostingDetailsComponent.html":{"url":"components/PostingDetailsComponent.html","title":"component - PostingDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostingDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posting-details/posting-details.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-posting-details\n            \n\n            \n                styleUrls\n                ./posting-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./posting-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                applyForm\n                            \n                            \n                                fileToUpload\n                            \n                            \n                                loading\n                            \n                            \n                                posting\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFileChanged\n                            \n                            \n                                processResultForPostings\n                            \n                            \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(postingService: PostingService, formBuilder: FormBuilder, spinner: NgxSpinnerService, route: ActivatedRoute, mailService: MailService, toastr: ToastrService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/posting-details/posting-details.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-details/posting-details.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-details/posting-details.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFileChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-details/posting-details.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processResultForPostings\n                        \n                        \n                    \n                \n            \n            \n                \nprocessResultForPostings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-details/posting-details.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (data: any) => void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendEmail\n                        \n                        \n                    \n                \n            \n            \n                \nsendEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-details/posting-details.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-details/posting-details.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-details/posting-details.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-details/posting-details.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            posting\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Posting\n\n                        \n                    \n                    \n                        \n                            Default value : new Posting()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-details/posting-details.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-details/posting-details.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/posting-details/posting-details.component.ts:75\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Posting } from '../common/posting';\nimport { PostingService } from '../service/posting.service';\nimport { MailService } from '../service/mail.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-posting-details',\n  templateUrl: './posting-details.component.html',\n  styleUrls: ['./posting-details.component.css']\n})\nexport class PostingDetailsComponent implements OnInit {\n  posting: Posting = new Posting();\n  applyForm: FormGroup;\n  fileToUpload: File;\n  loading = false;\n  submitted = false;\n\n\n\n  constructor(private postingService: PostingService,\n    private formBuilder: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute,\n    private mailService: MailService,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe(() => {\n      this.getValues();\n    });\n\n    this.applyForm = this.formBuilder.group({\n      firstAndLastName: ['', Validators.required],\n      email: ['', Validators.required],\n      introduction: ['', Validators.required],\n      pdfFile: ['', Validators.required]\n    });\n  }\n\n  getValues() {\n    this.spinner.show();\n    const id: number = +this.route.snapshot.paramMap.get('id');\n    this.postingService.get(id).subscribe(this.processResultForPostings());\n  }\n\n  processResultForPostings() {\n    this.spinner.show();\n    const id: number = +this.route.snapshot.paramMap.get('id');\n\n    return data => {\n      this.posting = data;\n      this.postingService.getCategory(id).subscribe(\n        data => {\n          this.posting.postingCategory = data.categoryName;\n\n        }\n      )\n\n      this.spinner.hide();\n      console.log(this.posting)\n      setTimeout(() => {\n        /** spinner ends after 2 seconds */\n        this.spinner.hide();\n      }, 2000);\n    }\n  }\n\n\n  get f() { return this.applyForm.controls; }\n\n\n  public onFileChanged(event) {\n    this.fileToUpload = event.target.files[0];\n  }\n\n  sendEmail() {\n    this.spinner.show();\n    this.submitted = true;\n\n    const formData: FormData = new FormData();\n    formData.append('pdfFile', this.fileToUpload, this.fileToUpload.name);\n    this.f.pdfFile.setValue(this.fileToUpload);\n\n    if (this.applyForm.invalid) {\n      this.toastr.warning('Form is invalid!');\n      this.spinner.hide();\n    }\n    else {\n      this.loading = true;\n      this.mailService.sendEmail(formData, this.posting.email, this.f.email.value, this.f.firstAndLastName.value, this.f.introduction.value, this.posting.companyName,\n        this.posting.localization, this.posting.positionName)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.toastr.success('Success!');\n            this.spinner.hide();\n            setTimeout(() => {\n              this.router.navigate(['/board']);\n            }, 1000)\n          },\n          error => {\n            this.toastr.error(error);\n            this.spinner.hide();\n          });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n             Opening connection to our database... \n        \n    \n    \n        \n            \n                \n                    \n                        Back to\n                            Careers\n                    \n                    {{ posting.localization }}\n                    Full Time\n                    {{ posting.postingCategory }}\n                \n            \n            \n                {{ posting.positionName }}\n                 {{posting.description}} \n                \n                    \n                        \n                            \n                                \n                                    First and last name\n                                    \n                                \n                                \n                                    Email\n                                    \n                                \n                            \n                            \n                            \n                                \n                                    Introduce yourself\n                                    \n                                \n                                \n                                    Upload PDF\n                                    \n                                        Upload your CV\n                                        \n                                        \n                                        folder\n                                    \n                                \n                            \n                        \n                    \n                    Apply Now\n                    \n                \n            \n        \n    \n    \n\n    \n                \n                    ./posting-details.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Opening connection to our database...                                                                                                 Back to                            Careers                                        {{ posting.localization }}                    Full Time                    {{ posting.postingCategory }}                                                        {{ posting.positionName }}                 {{posting.description}}                                                                                                                                                             First and last name                                                                                                                                        Email                                                                                                                                                                                                                            Introduce yourself                                                                                                                                        Upload PDF                                                                            Upload your CV                                                                                                                        folder                                                                                                                                                                Apply Now                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostingDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostingEditComponent.html":{"url":"components/PostingEditComponent.html","title":"component - PostingEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostingEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/posting-edit/posting-edit.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-posting-edit\n            \n\n            \n                styleUrls\n                ./posting-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./posting-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dropdownList\n                            \n                            \n                                dropdownSettings\n                            \n                            \n                                emailValue\n                            \n                            \n                                loading\n                            \n                            \n                                postingForm\n                            \n                            \n                                requirements\n                            \n                            \n                                submitted\n                            \n                            \n                                tempCategoryName\n                            \n                            \n                                tempCompanyName\n                            \n                            \n                                tempDescription\n                            \n                            \n                                tempLocalization\n                            \n                            \n                                tempMaxSalary\n                            \n                            \n                                tempMinSalary\n                            \n                            \n                                tempPositionName\n                            \n                            \n                                tempRequirements\n                            \n                            \n                                tempRequirementsArray\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getValues\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onItemSelect\n                            \n                            \n                                onSelectAll\n                            \n                            \n                                processResultForPostings\n                            \n                            \n                                putJob\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService, postingService: PostingService, spinner: NgxSpinnerService, toastr: ToastrService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/posting-edit/posting-edit.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getValues\n                        \n                        \n                    \n                \n            \n            \n                \ngetValues()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onItemSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonItemSelect(item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelectAll\n                        \n                        \n                    \n                \n            \n            \n                \nonSelectAll(items: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            processResultForPostings\n                        \n                        \n                    \n                \n            \n            \n                \nprocessResultForPostings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     (data: any) => void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putJob\n                        \n                        \n                    \n                \n            \n            \n                \nputJob()\n                \n            \n\n\n            \n                \n                    Defined in src/app/posting-edit/posting-edit.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownSettings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postingForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempCategoryName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempCompanyName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempLocalization\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempMaxSalary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempMinSalary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempPositionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempRequirements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempRequirementsArray\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/posting-edit/posting-edit.component.ts:89\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { AUTHENTICATED_USER } from '../app.constants';\nimport { PostingService } from '../service/posting.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-posting-edit',\n  templateUrl: './posting-edit.component.html',\n  styleUrls: ['./posting-edit.component.css']\n})\nexport class PostingEditComponent implements OnInit {\n\n  postingForm: FormGroup\n  loading = false;\n  submitted = false;\n  dropdownList = [];\n  requirements = [];\n  dropdownSettings = {};\n\n  emailValue: string;\n  tempCompanyName: string = \"\";\n  tempPositionName: string = \"\";\n  tempCategoryName: string = \"\";\n  tempRequirements: string = \"\";\n  tempRequirementsArray: any[] = [];\n  tempLocalization: string = \"\";\n  tempDescription: string = \"\";\n  tempMinSalary: number = 0;\n  tempMaxSalary: number = 0;\n\n  constructor(private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private postingService: PostingService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n\n    this.route.paramMap.subscribe(() => {\n      this.getValues();\n    });\n\n    this.emailValue = sessionStorage.getItem(AUTHENTICATED_USER);\n\n    this.userService.get(this.emailValue).subscribe(data => {\n\n      this.tempCompanyName = data.name;\n    });\n\n    this.postingForm = this.formBuilder.group({\n      companyName: ['', Validators.required],\n      email: [this.emailValue, Validators.required],\n      positionName: ['', Validators.required],\n      category: ['', Validators.required],\n      requirements: ['', Validators.required],\n      localization: ['', Validators.required],\n      description: ['', Validators.required],\n      minSalary: ['', Validators.required],\n      maxSalary: ['', Validators.required]\n    });\n\n    this.dropdownList = [\n      'Java',\n      'C#',\n      'JavaScript',\n      'Python',\n      'Swift',\n      'Kotlin',\n      'C++',\n      'PHP'\n    ];\n    this.dropdownSettings = {\n      singleSelection: false,\n      selectAllText: 'Select All',\n      unSelectAllText: 'Deselect All',\n      itemsShowLimit: 7,\n      allowSearchFilter: true\n    };\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.postingForm.controls; }\n\n\n  putJob() {\n\n    const id: number = +this.route.snapshot.paramMap.get('id');\n\n    this.postingForm = this.formBuilder.group({\n      companyName: [this.tempCompanyName, Validators.required],\n      email: [this.emailValue, Validators.required],\n      positionName: [this.tempPositionName, Validators.required],\n      category: [this.tempCategoryName, Validators.required],\n      requirements: [this.tempRequirementsArray, Validators.required],\n      localization: [this.tempLocalization, Validators.required],\n      description: [this.tempDescription, Validators.required],\n      minSalary: [this.tempMinSalary, Validators.required],\n      maxSalary: [this.tempMaxSalary, Validators.required]\n    })\n\n    this.spinner.show();\n    this.submitted = true;\n\n\n\n    // // stop here if form is invalid\n    if (this.postingForm.invalid) {\n      this.toastr.warning('Form is invalid!');\n      this.spinner.hide();\n    }\n    else {\n\n      this.loading = true;\n      this.postingService.editPosting(id, this.postingForm.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.spinner.hide();\n            this.toastr.success('Job posting edited');\n            this.router.navigate(['/my-postings']);\n          },\n          error => {\n            if (error.status == 200) {\n              this.spinner.hide();\n              this.toastr.success('Job posting edited');\n              this.router.navigate(['/my-postings']);\n            }\n            else {\n              this.toastr.error(error);\n              this.spinner.hide();\n            }\n\n          });\n    }\n  }\n\n  onItemSelect(item: any) {\n    this.requirements = item;\n  }\n  onSelectAll(items: any) {\n    this.requirements = items;\n  }\n\n  getValues() {\n    const id: number = +this.route.snapshot.paramMap.get('id');\n    this.postingService.get(id).subscribe(this.processResultForPostings());\n  }\n\n  processResultForPostings() {\n    this.spinner.show();\n    const id: number = +this.route.snapshot.paramMap.get('id');\n\n    return data => {\n      this.tempPositionName = data.positionName;\n      this.tempRequirements = data.requirement;\n      this.tempRequirementsArray = data.requirement.slice(0, -1).split(',');\n      this.tempLocalization = data.localization;\n      this.tempDescription = data.description;\n      this.tempMinSalary = data.minSalary;\n      this.tempMaxSalary = data.maxSalary;\n      this.postingService.getCategory(id).subscribe(\n        data => {\n          this.tempCategoryName = data.categoryName;\n\n        }\n      )\n\n      setTimeout(() => {\n        /** spinner ends after 2 seconds */\n        this.spinner.hide();\n      }, 1000);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n         Opening form... \n    \n    \n        \n        \n            \n                Job posting\n            \n            \n            \n                \n                \n                    \n                    \n                        Company Name\n                        \n                    \n                    \n                    \n                        Email\n                        \n                    \n                    \n                    \n                    \n                        Job title\n                        \n                    \n                    \n                    \n                        Category\n                        \n                            Backend\n                            Frontend\n                            Fullstack\n                            DevOps\n                            Analyst\n                            Support\n                        \n                    \n                    \n                    \n                        Requirements\n                        \n                        \n                    \n                    \n                    \n                        Localization\n                        \n                    \n                    \n                    \n                        Job description (Tasks, responsibilities, etc.)\n                        \n                    \n                    \n                    \n                        Minimum salary\n                        \n                    \n                    \n                    \n                        Maximum salary\n                        \n                    \n                    \n                    \n                        Change posting\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./posting-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Opening form...                                                     Job posting                                                                                                                                    Company Name                                                                                                            Email                                                                                                                                Job title                                                                                                            Category                                                    Backend                            Frontend                            Fullstack                            DevOps                            Analyst                            Support                                                                                                            Requirements                                                                                                                                    Localization                                                                                                            Job description (Tasks, responsibilities, etc.)                                                                                                            Minimum salary                                                                                                            Maximum salary                                                                                                            Change posting                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PostingEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostingService.html":{"url":"injectables/PostingService.html","title":"injectable - PostingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/posting.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deletePosting\n                            \n                            \n                                editPosting\n                            \n                            \n                                get\n                            \n                            \n                                getAll\n                            \n                            \n                                getAllPostingCategories\n                            \n                            \n                                getAllPostingsForCompany\n                            \n                            \n                                getByCategory\n                            \n                            \n                                getByLanguage\n                            \n                            \n                                getByLocalization\n                            \n                            \n                                getCategory\n                            \n                            \n                                postJob\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/posting.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePosting\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePosting(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editPosting\n                        \n                        \n                    \n                \n            \n            \n                \neditPosting(id: number, posting: Posting)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    posting\n                                    \n                                                Posting\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPostingCategories\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPostingCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPostingsForCompany\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPostingsForCompany(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetByCategory(categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByLanguage\n                        \n                        \n                    \n                \n            \n            \n                \ngetByLanguage(requirement: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requirement\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getByLocalization\n                        \n                        \n                    \n                \n            \n            \n                \ngetByLocalization(localization: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localization\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCategory\n                        \n                        \n                    \n                \n            \n            \n                \ngetCategory(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            postJob\n                        \n                        \n                    \n                \n            \n            \n                \npostJob(posting: Posting)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/posting.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    posting\n                                    \n                                                Posting\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { API_URL } from '../app.constants';\nimport { Company } from '../common/company';\nimport { Posting } from '../common/posting';\nimport { Category } from '../common/category';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostingService {\n\n  constructor(private http: HttpClient) { }\n\n  postJob(posting: Posting) {\n    return this.http.post(`${API_URL}/posting/create`, posting);\n  }\n\n  get(id: number) {\n    return this.http.get(`${API_URL}/postings/${id}`);\n  }\n\n  getByLocalization(localization: string) {\n    return this.http.get(`${API_URL}/postings/search/findByLocalizationContaining?localization=${localization}`);\n  }\n\n  getByLanguage(requirement: string) {\n    return this.http.get(`${API_URL}/postings/search/findByRequirementContaining?requirement=${requirement}`);\n  }\n\n  getByCategory(categoryId: number) {\n    return this.http.get(`${API_URL}/postings/search/findByPostingCategoryId?id=${categoryId}`);\n  }\n\n  getCategory(id: number) {\n    return this.http.get(`${API_URL}/postings/${id}/postingCategory`);\n  }\n\n  getAll() {\n    return this.http.get(`${API_URL}/postings`);\n  }\n\n  getAllPostingsForCompany(email: string) {\n    return this.http.get(`${API_URL}/postings/search/findByEmail?email=${email}`)\n  }\n\n  getAllPostingCategories() {\n    return this.http.get(`${API_URL}/postingCategories`)\n  }\n\n  deletePosting(id: number) {\n    return this.http.delete(`${API_URL}/posting/delete/${id}`)\n  }\n\n  editPosting(id: number, posting: Posting) {\n    return this.http.put(`${API_URL}/posting/${id}`, posting)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/profile/profile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                styleUrls\n                ./profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base64Data\n                            \n                            \n                                convertedImage\n                            \n                            \n                                email\n                            \n                            \n                                    Public\n                                event1\n                            \n                            \n                                firstName\n                            \n                            \n                                imageId\n                            \n                            \n                                imgURL\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phoneNumber\n                            \n                            \n                                pic\n                            \n                            \n                                receivedImageData\n                            \n                            \n                                    Public\n                                selectedFile\n                            \n                            \n                                surname\n                            \n                            \n                                updateForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickLabel\n                            \n                            \n                                deleteAccount\n                            \n                            \n                                deleteAllUserPostings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFileChanged\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, basicAuthenticationService: BasicAuthenticationService, postingService: PostingService, spinner: NgxSpinnerService, formBuilder: FormBuilder, router: Router, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/profile/profile.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        basicAuthenticationService\n                                                  \n                                                        \n                                                                        BasicAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postingService\n                                                  \n                                                        \n                                                                        PostingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLabel\n                        \n                        \n                    \n                \n            \n            \n                \nclickLabel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAllUserPostings\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAllUserPostings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onFileChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onFileChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUser\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/profile/profile.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64Data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            convertedImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            event1\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imgURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            receivedImageData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedFile\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            surname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/profile/profile.component.ts:35\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { first } from 'rxjs/operators';\nimport { AUTHENTICATED_USER } from '../app.constants';\nimport { Company } from '../common/company';\nimport { BasicAuthenticationService } from '../service/basic-authentication.service';\nimport { PostingService } from '../service/posting.service';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public selectedFile;\n  public event1;\n  imgURL: any = \"\";\n  receivedImageData: any;\n  base64Data: any;\n  convertedImage: any;\n  imageId: any;\n\n  name: string;\n  firstName: string;\n  surname: string;\n  email: string;\n  phoneNumber: number;\n  password: string;\n  pic: any;\n\n  updateForm: FormGroup;\n\n  constructor(private userService: UserService,\n    private basicAuthenticationService: BasicAuthenticationService,\n    private postingService: PostingService,\n    private spinner: NgxSpinnerService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService) {\n  }\n\n  ngOnInit(): void {\n    this.userService.get(sessionStorage.getItem(AUTHENTICATED_USER)).subscribe(data => {\n      this.name = data.name\n      this.firstName = data.firstName\n      this.surname = data.surname\n      this.email = data.email\n      this.phoneNumber = data.phoneNumber\n      this.password = data.password\n      this.pic = data.pic;\n    });\n\n\n    this.updateForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      firstName: ['', Validators.required],\n      surname: ['', Validators.required],\n      email: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      password: ['', Validators.required, Validators.minLength(6)]\n    });\n  }\n\n  updateUser() {\n    this.spinner.show();\n\n    const uploadData = new FormData();\n\n    if (this.imgURL != \"\") {\n      uploadData.append('newCompany', this.selectedFile, this.selectedFile.name)\n    }\n\n    this.updateForm = this.formBuilder.group({\n      name: [this.name, Validators.required],\n      firstName: [this.firstName, Validators.required],\n      surname: [this.surname, Validators.required],\n      email: [this.email, Validators.required],\n      phoneNumber: [this.phoneNumber, Validators.required],\n      password: [this.password, Validators.required]\n    });\n\n    if (this.updateForm.invalid) {\n      this.toastr.error('Form is invalid!');\n      this.spinner.hide();\n    }\n    else if (this.updateForm.controls['email'].value === ' ') {\n      this.toastr.error('Nice try ;)');\n      this.spinner.hide();\n    }\n    else if (this.password.length  {\n            if (this.imgURL != \"\") {\n              this.userService.updatePhoto(this.email, uploadData).subscribe(\n                data => {\n                  window.location.reload();\n                  this.toastr.success('Update successful');\n                  this.spinner.hide();\n                },\n                error => {\n                  this.toastr.warning('Update error');\n                  this.spinner.hide();\n                }\n\n              )\n            }\n            else {\n              this.toastr.success('Update successful');\n              this.spinner.hide();\n            }\n          },\n          error => {\n            this.toastr.error('Update error');\n            this.spinner.hide();\n          });\n    }\n  }\n\n  public onFileChanged(event) {\n    this.selectedFile = event.target.files[0];\n\n    //display selected image\n    if (this.selectedFile != undefined) {\n      let reader = new FileReader();\n      reader.readAsDataURL(event.target.files[0]);\n      reader.onload = (event2) => {\n        this.imgURL = reader.result;\n      }\n    } else {\n      this.imgURL = undefined;\n    }\n  }\n\n  clickLabel() {\n    let label = document.getElementById(\"add\");\n    label.click();\n  }\n\n  deleteAccount() {\n    this.spinner.show();\n    this.userService.delete(this.email).subscribe(\n      data => {\n        this.postingService.getAllPostingsForCompany(this.email).subscribe(\n          data => {\n            const tempData = data['_embedded']['postings'];\n            for (let index = 0; index  {},\n                error => {\n                  this.toastr.error(\"Error occured\");\n                  this.spinner.hide();\n                }\n              )\n            }\n            this.basicAuthenticationService.logout();\n            this.router.navigate([\"/board\"]);\n            this.toastr.success(\"Account deleted\");\n            this.spinner.hide();\n          },\n          error => {\n            this.toastr.error(\"Error occured\");\n            this.spinner.hide();\n          }\n        )\n      },\n      error => {\n        this.toastr.error(\"Error occured\");\n        this.spinner.hide();\n      }\n    )\n  }\n\n  deleteAllUserPostings(){\n    this.postingService.getAllPostingsForCompany(this.email).subscribe(\n      data => {\n        const tempData = data['_embedded']['postings'];\n        for (let index = 0; index  {},\n            error => {\n              this.toastr.error(\"Error occured\");\n              this.spinner.hide();\n            }\n          )\n        }\n      },\n      error => {\n        this.toastr.error(\"Error occured\");\n        this.spinner.hide();\n      }\n    )\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n\n\n    \n         Updating user... \n    \n    \n        \n            \n            \n                Profile Picture\n                \n                    \n                    \n\n                    \n\n                    \n                    \n                    JPG or PNG no larger than 2 MB\n                    \n                    Upload new image -->\n                    \n                    Click to\n                        choose a file\n                \n            \n        \n        \n            \n            \n                Account Details\n                \n                    \n                        \n                            Company Name\n                            \n                        \n                        \n                            First Name\n                            \n                        \n                        \n                            Last Name\n                            \n                        \n                        \n                            Email\n                            \n                        \n                        \n                            Phone Number\n                            \n                        \n                        \n                            Password\n                            \n                        \n                        \n                        \n                            &nbsp;&nbsp; Save Changes\n                        \n                        \n                            &nbsp;&nbsp;\n                            Delete\n                            account\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./profile.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Updating user...                                                         Profile Picture                                                                                                                                        JPG or PNG no larger than 2 MB                                        Upload new image -->                                        Click to                        choose a file                                                                                    Account Details                                                                                        Company Name                                                                                                        First Name                                                                                                        Last Name                                                                                                        Email                                                                                                        Phone Number                                                                                                        Password                                                                                                                                   Save Changes                                                                                                          Delete                            account                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouteGuardService.html":{"url":"injectables/RouteGuardService.html","title":"injectable - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/route-guard.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(basicAuthenticationService: BasicAuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/route-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        basicAuthenticationService\n                                                  \n                                                        \n                                                                        BasicAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/route-guard.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\nimport { BasicAuthenticationService } from './basic-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService {\n\n  constructor(private basicAuthenticationService: BasicAuthenticationService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n    if(this.basicAuthenticationService.isUserLoggedIn()){\n      return true;\n    }\n\n    this.router.navigate(['login'])\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignUpComponent.html":{"url":"components/SignUpComponent.html","title":"component - SignUpComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignUpComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/sign-up/sign-up.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-up\n            \n\n            \n                styleUrls\n                ./sign-up.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sign-up.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    f\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, router: Router, userService: UserService, spinner: NgxSpinnerService, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/sign-up/sign-up.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/sign-up/sign-up.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/sign-up/sign-up.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        f\n                    \n                \n\n                \n                    \n                        getf()\n                    \n                \n                            \n                                \n                                    Defined in src/app/sign-up/sign-up.component.ts:38\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../service/user.service'\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userService: UserService,\n    private spinner: NgxSpinnerService,\n    private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      firstName: [''],\n      surname: [''],\n      email: ['', Validators.required],\n      phoneNumber: [''],\n      password: ['', Validators.required]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.spinner.show();\n    this.submitted = true;\n\n    console.log(this.registerForm.value)\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      this.toastr.warning('Form is invalid!');\n      this.spinner.hide();\n    }\n    else {\n      this.loading = true;\n      this.userService.register(this.registerForm.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.spinner.hide();\n            this.toastr.success('Registration successful');\n            this.router.navigate(['/login']);\n          },\n          error => {\n            this.toastr.error(error);\n            this.spinner.hide();\n          });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n             Opening connection to our database... \n        \n    \n    \n        \n            \n        \n        \n            \n            \n                \n                    Create an Account\n                \n                \n                \n                    \n                    \n                        \n                        \n                            Company Name\n                            \n                        \n                        \n                        \n                            \n                                \n                                \n                                    First name\n                                    \n                                \n                            \n                            \n                                \n                                \n                                    Last name\n                                    \n                                \n                            \n                        \n                        \n                        \n                            Email address\n                            \n                        \n                        \n                        \n                            Phone Number\n                            \n                        \n                        \n                        \n                            \n                                \n                                \n                                    Password (Min. 6\n                                        characters)\n                                    \n                                \n                            \n                        \n                        \n                        \n                            \n                                \n                                \n                                    I accept the\n                                    terms &amp; conditions\n                                    .\n                                \n                            \n                            Create Account\n                        \n                    \n                \n                \n                \n                    \n                        Have an account?\n                        Sign in!\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./sign-up.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                         Opening connection to our database...                                                                                                                 Create an Account                                                                                                                                                                    Company Name                                                                                                                                                                                                                                    First name                                                                                                                                                                                                                                Last name                                                                                                                                                                                                    Email address                                                                                                                                Phone Number                                                                                                                                                                                                                                    Password (Min. 6                                        characters)                                                                                                                                                                                                                                                                                                        I accept the                                    terms & conditions                                    .                                                                                        Create Account                                                                                                                                        Have an account?                        Sign in!                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'FormComponent', 'selector': 'app-form'},{'name': 'JobBoardComponent', 'selector': 'app-job-board'},{'name': 'JobPostingsComponent', 'selector': 'app-job-postings'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MyPostingsComponent', 'selector': 'app-my-postings'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PageHeaderComponent', 'selector': 'app-page-header'},{'name': 'PostingDetailsComponent', 'selector': 'app-posting-details'},{'name': 'PostingEditComponent', 'selector': 'app-posting-edit'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'SignUpComponent', 'selector': 'app-sign-up'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignUpComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                get\n                            \n                            \n                                put\n                            \n                            \n                                register\n                            \n                            \n                                updatePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(email: string, company: Company)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    company\n                                    \n                                                Company\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(company: Company)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    company\n                                    \n                                                Company\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePhoto\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePhoto(email: string, image: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/service/user.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { API_URL } from '../app.constants';\nimport { HttpClient } from '@angular/common/http';\nimport { Company } from '../common/company';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  get(email: string) {\n    return this.http.get(`${API_URL}/company/${email}`);\n  }\n\n  register(company: Company) {\n    return this.http.post(`${API_URL}/company/create`, company);\n  }\n\n  delete(email: string) {\n    return this.http.delete(`${API_URL}/company/${email}`);\n  }\n\n  put(email: string, company: Company) {\n    return this.http.put(`${API_URL}/company/${email}`, company);\n  }\n\n  updatePhoto(email: string, image: any) {\n    return this.http.put(`${API_URL}/company/${email}/photo`, image);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            AUTHENTICATED_USER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.constants.ts\n            \n            variable\n            TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/common/category.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/common/company.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/common/mail.ts\n            \n            class\n            Mail\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/common/posting.ts\n            \n            class\n            Posting\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/job-board/job-board.component.ts\n            \n            component\n            JobBoardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/job-postings/job-postings.component.ts\n            \n            component\n            JobPostingsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/layout/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/layout/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/my-postings/my-postings.component.ts\n            \n            component\n            MyPostingsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/page-header/page-header.component.ts\n            \n            component\n            PageHeaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/posting-details/posting-details.component.ts\n            \n            component\n            PostingDetailsComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/posting-edit/posting-edit.component.ts\n            \n            component\n            PostingEditComponent\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/service/basic-authentication.service.ts\n            \n            class\n            AuthenticationBean\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/basic-authentication.service.ts\n            \n            injectable\n            BasicAuthenticationService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/http/http-intercepter-basic-auth.service.ts\n            \n            injectable\n            HttpIntercepterBasicAuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/posting.service.ts\n            \n            injectable\n            PostingService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/route-guard.service.ts\n            \n            injectable\n            RouteGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/sign-up/sign-up.component.ts\n            \n            component\n            SignUpComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~10.0.0\n        \n            @angular/cdk : ^10.2.7\n        \n            @angular/common : ~10.0.0\n        \n            @angular/compiler : ~10.0.0\n        \n            @angular/core : ~10.0.0\n        \n            @angular/forms : ~10.0.0\n        \n            @angular/material : ^10.2.7\n        \n            @angular/platform-browser : ~10.0.0\n        \n            @angular/platform-browser-dynamic : ~10.0.0\n        \n            @angular/router : ~10.0.0\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            angular-feather : ^6.1.0\n        \n            core-js : ^3.8.1\n        \n            font-awesome : ^4.7.0\n        \n            jquery : ^3.5.1\n        \n            ng-multiselect-dropdown : ^0.2.14\n        \n            ngx-chips : ^2.2.2\n        \n            ngx-material-file-input : ^2.1.1\n        \n            ngx-spinner : ^10.0.1\n        \n            ngx-toastr : ^13.2.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nJoinITUI\nThis project was generated with Angular CLI version 10.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nAppModule -->\n\nFormComponent->AppModule\n\n\n\n\n\nJobBoardComponent\n\nJobBoardComponent\n\nAppModule -->\n\nJobBoardComponent->AppModule\n\n\n\n\n\nJobPostingsComponent\n\nJobPostingsComponent\n\nAppModule -->\n\nJobPostingsComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMyPostingsComponent\n\nMyPostingsComponent\n\nAppModule -->\n\nMyPostingsComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nNotFoundComponent\n\nNotFoundComponent\n\nAppModule -->\n\nNotFoundComponent->AppModule\n\n\n\n\n\nPageHeaderComponent\n\nPageHeaderComponent\n\nAppModule -->\n\nPageHeaderComponent->AppModule\n\n\n\n\n\nPostingDetailsComponent\n\nPostingDetailsComponent\n\nAppModule -->\n\nPostingDetailsComponent->AppModule\n\n\n\n\n\nPostingEditComponent\n\nPostingEditComponent\n\nAppModule -->\n\nPostingEditComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nSignUpComponent\n\nSignUpComponent\n\nAppModule -->\n\nSignUpComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nHttpIntercepterBasicAuthService\n\nHttpIntercepterBasicAuthService\n\nAppModule -->\n\nHttpIntercepterBasicAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        14 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL   (src/.../app.constants.ts)\n                        \n                        \n                            AUTHENTICATED_USER   (src/.../app.constants.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN   (src/.../app.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            API_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://joinitwebsite.azurewebsites.net\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            AUTHENTICATED_USER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authenticatedUser'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'token'\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
